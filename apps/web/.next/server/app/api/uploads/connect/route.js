"use strict";(()=>{var e={};e.id=325,e.ids=[325,944,919],e.modules={11185:e=>{e.exports=require("mongoose")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39491:e=>{e.exports=require("assert")},14300:e=>{e.exports=require("buffer")},32081:e=>{e.exports=require("child_process")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},57147:e=>{e.exports=require("fs")},73292:e=>{e.exports=require("fs/promises")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},41808:e=>{e.exports=require("net")},15673:e=>{e.exports=require("node:events")},97742:e=>{e.exports=require("node:process")},84492:e=>{e.exports=require("node:stream")},47261:e=>{e.exports=require("node:util")},22037:e=>{e.exports=require("os")},71017:e=>{e.exports=require("path")},85477:e=>{e.exports=require("punycode")},63477:e=>{e.exports=require("querystring")},12781:e=>{e.exports=require("stream")},24404:e=>{e.exports=require("tls")},76224:e=>{e.exports=require("tty")},35034:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},59796:e=>{e.exports=require("zlib")},74957:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>f,patchFetch:()=>h,requestAsyncStorage:()=>x,routeModule:()=>m,serverHooks:()=>q,staticGenerationAsyncStorage:()=>y});var s={};t.r(s),t.d(s,{POST:()=>p});var n=t(63036),a=t(5736),o=t(15262),i=t(60942),u=t(1295),l=t(41524),c=t(50944);let d=l.Ry({uploadId:l.Z_().min(1,"Upload ID is required"),fileReferences:l.IX(l.Z_()).min(1,"File references are required")});async function p(e){try{let r=await (0,u.getServerSession)();if(!r?.user?.email)return i.NextResponse.json({error:"Authentication required"},{status:401});let s=r.user.email,n=await c.userRepository.findByEmail(s);if(!n)return i.NextResponse.json({error:"User account not found"},{status:404});let a=n._id,o=await e.json(),l=d.safeParse(o);if(!l.success)return i.NextResponse.json({error:"Invalid request data",details:l.error.issues.map(e=>e.message)},{status:400});let{uploadId:p,fileReferences:m}=l.data;try{let{analysisService:e}=await Promise.all([t.e(306),t.e(879)]).then(t.bind(t,48798)),r=await e.processAnalysis(p,m,a);return console.log("Connected upload to authenticated user:",{uploadId:p,analysisId:r,userId:a,fileCount:m.length}),i.NextResponse.json({success:!0,analysisId:r,message:"Upload successfully connected to your account and analysis started"},{status:200})}catch(e){return console.error("Failed to trigger analysis for connected upload:",e),i.NextResponse.json({error:"Failed to start analysis for your uploaded files. Please try again.",details:e instanceof Error?e.message:String(e)},{status:500})}}catch(e){return console.error("Connect upload API error:",e),i.NextResponse.json({error:"Internal server error. Please try again."},{status:500})}}let m=new n.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/uploads/connect/route",pathname:"/api/uploads/connect",filename:"route",bundlePath:"app/api/uploads/connect/route"},resolvedPagePath:"/Users/shrijayan.rajendran/projects/personal/bank_statement/apps/web/src/app/api/uploads/connect/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:x,staticGenerationAsyncStorage:y,serverHooks:q}=m,f="/api/uploads/connect/route";function h(){return(0,o.patchFetch)({serverHooks:q,staticGenerationAsyncStorage:y})}},77919:(e,r,t)=>{t.d(r,{Z:()=>o});var s=t(11185),n=t.n(s);let a=global.mongoose;a||(a=global.mongoose={conn:null,promise:null});let o=async function(){if(a.conn)return a.conn;if(!a.promise){let e=process.env.MONGODB_URI;if(!e)throw Error("Please define the MONGODB_URI environment variable inside .env.local");a.promise=n().connect(e,{bufferCommands:!1}).then(e=>e)}try{a.conn=await a.promise}catch(e){throw a.promise=null,e}return a.conn}},50944:(e,r,t)=>{t.d(r,{userRepository:()=>l});var s=t(11185),n=t.n(s);let a=new s.Schema({name:{type:String,required:[!0,"Name is required"],trim:!0,maxlength:[100,"Name cannot exceed 100 characters"]},email:{type:String,required:[!0,"Email is required"],unique:!0,lowercase:!0,trim:!0,match:[/^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$/,"Please enter a valid email address"]},password:{type:String,required:[!0,"Password is required"],minlength:[6,"Password must be at least 6 characters long"]}},{timestamps:!0,collection:"users"}),o=n().models.User||n().model("User",a);var i=t(77919);class u{async ensureConnection(){process.env.JEST_WORKER_ID||await (0,i.Z)()}async findByEmail(e){await this.ensureConnection();let r=await o.findOne({email:e}).exec();return r?this.transformToPublicUser(r):null}async findById(e){await this.ensureConnection();let r=await o.findById(e).exec();return r?this.transformToPublicUser(r):null}async create(e){await this.ensureConnection();let r=new o({name:e.name,email:e.email,password:e.password}),t=await r.save();return this.transformToPublicUser(t)}async updateById(e,r){await this.ensureConnection();let t=await o.findByIdAndUpdate(e,{$set:r},{new:!0,runValidators:!0}).exec();return t?this.transformToPublicUser(t):null}async deleteById(e){return await this.ensureConnection(),!!await o.findByIdAndDelete(e).exec()}async existsByEmail(e){return await this.ensureConnection(),await o.countDocuments({email:e}).exec()>0}async findByEmailWithPassword(e){return await this.ensureConnection(),o.findOne({email:e}).exec()}transformToPublicUser(e){return{_id:e._id.toString(),name:e.name,email:e.email,createdAt:e.createdAt,updatedAt:e.updatedAt}}}let l=new u}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[522,295,746,524],()=>t(74957));module.exports=s})();