/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/analysis/status/[analysisId]/route";
exports.ids = ["app/api/analysis/status/[analysisId]/route"];
exports.modules = {

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("mongoose");

/***/ }),

/***/ "../../client/components/action-async-storage.external":
/*!*******************************************************************************!*\
  !*** external "next/dist/client/components/action-async-storage.external.js" ***!
  \*******************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/action-async-storage.external.js");

/***/ }),

/***/ "../../client/components/request-async-storage.external":
/*!********************************************************************************!*\
  !*** external "next/dist/client/components/request-async-storage.external.js" ***!
  \********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/request-async-storage.external.js");

/***/ }),

/***/ "../../client/components/static-generation-async-storage.external":
/*!******************************************************************************************!*\
  !*** external "next/dist/client/components/static-generation-async-storage.external.js" ***!
  \******************************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/client/components/static-generation-async-storage.external.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

"use strict";
module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("fs/promises");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("http");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

"use strict";
module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("net");

/***/ }),

/***/ "node:events":
/*!******************************!*\
  !*** external "node:events" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:events");

/***/ }),

/***/ "node:process":
/*!*******************************!*\
  !*** external "node:process" ***!
  \*******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:process");

/***/ }),

/***/ "node:stream":
/*!******************************!*\
  !*** external "node:stream" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:stream");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

"use strict";
module.exports = require("node:util");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

"use strict";
module.exports = require("punycode");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

"use strict";
module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

"use strict";
module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

"use strict";
module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("zlib");

/***/ }),

/***/ "?3713":
/*!****************************!*\
  !*** bufferutil (ignored) ***!
  \****************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "?8e41":
/*!********************************!*\
  !*** utf-8-validate (ignored) ***!
  \********************************/
/***/ (() => {

/* (ignored) */

/***/ }),

/***/ "(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalysis%2Fstatus%2F%5BanalysisId%5D%2Froute&page=%2Fapi%2Fanalysis%2Fstatus%2F%5BanalysisId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalysis%2Fstatus%2F%5BanalysisId%5D%2Froute.ts&appDir=%2FUsers%2Fshrijayan.rajendran%2Fprojects%2Fpersonal%2Fbank_statement%2Fapps%2Fweb%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fshrijayan.rajendran%2Fprojects%2Fpersonal%2Fbank_statement%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalysis%2Fstatus%2F%5BanalysisId%5D%2Froute&page=%2Fapi%2Fanalysis%2Fstatus%2F%5BanalysisId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalysis%2Fstatus%2F%5BanalysisId%5D%2Froute.ts&appDir=%2FUsers%2Fshrijayan.rajendran%2Fprojects%2Fpersonal%2Fbank_statement%2Fapps%2Fweb%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fshrijayan.rajendran%2Fprojects%2Fpersonal%2Fbank_statement%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!
  \**********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/../../node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/../../node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/../../node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_shrijayan_rajendran_projects_personal_bank_statement_apps_web_src_app_api_analysis_status_analysisId_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/analysis/status/[analysisId]/route.ts */ \"(rsc)/./src/app/api/analysis/status/[analysisId]/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/analysis/status/[analysisId]/route\",\n        pathname: \"/api/analysis/status/[analysisId]\",\n        filename: \"route\",\n        bundlePath: \"app/api/analysis/status/[analysisId]/route\"\n    },\n    resolvedPagePath: \"/Users/shrijayan.rajendran/projects/personal/bank_statement/apps/web/src/app/api/analysis/status/[analysisId]/route.ts\",\n    nextConfigOutput,\n    userland: _Users_shrijayan_rajendran_projects_personal_bank_statement_apps_web_src_app_api_analysis_status_analysisId_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/analysis/status/[analysisId]/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvbmV4dC1hcHAtbG9hZGVyLmpzP25hbWU9YXBwJTJGYXBpJTJGYW5hbHlzaXMlMkZzdGF0dXMlMkYlNUJhbmFseXNpc0lkJTVEJTJGcm91dGUmcGFnZT0lMkZhcGklMkZhbmFseXNpcyUyRnN0YXR1cyUyRiU1QmFuYWx5c2lzSWQlNUQlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZhbmFseXNpcyUyRnN0YXR1cyUyRiU1QmFuYWx5c2lzSWQlNUQlMkZyb3V0ZS50cyZhcHBEaXI9JTJGVXNlcnMlMkZzaHJpamF5YW4ucmFqZW5kcmFuJTJGcHJvamVjdHMlMkZwZXJzb25hbCUyRmJhbmtfc3RhdGVtZW50JTJGYXBwcyUyRndlYiUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZzaHJpamF5YW4ucmFqZW5kcmFuJTJGcHJvamVjdHMlMkZwZXJzb25hbCUyRmJhbmtfc3RhdGVtZW50JTJGYXBwcyUyRndlYiZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDc0U7QUFDbko7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvP2QxZjMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiL1VzZXJzL3NocmlqYXlhbi5yYWplbmRyYW4vcHJvamVjdHMvcGVyc29uYWwvYmFua19zdGF0ZW1lbnQvYXBwcy93ZWIvc3JjL2FwcC9hcGkvYW5hbHlzaXMvc3RhdHVzL1thbmFseXNpc0lkXS9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYW5hbHlzaXMvc3RhdHVzL1thbmFseXNpc0lkXS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2FuYWx5c2lzL3N0YXR1cy9bYW5hbHlzaXNJZF1cIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL2FuYWx5c2lzL3N0YXR1cy9bYW5hbHlzaXNJZF0vcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvc2hyaWpheWFuLnJhamVuZHJhbi9wcm9qZWN0cy9wZXJzb25hbC9iYW5rX3N0YXRlbWVudC9hcHBzL3dlYi9zcmMvYXBwL2FwaS9hbmFseXNpcy9zdGF0dXMvW2FuYWx5c2lzSWRdL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9hbmFseXNpcy9zdGF0dXMvW2FuYWx5c2lzSWRdL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalysis%2Fstatus%2F%5BanalysisId%5D%2Froute&page=%2Fapi%2Fanalysis%2Fstatus%2F%5BanalysisId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalysis%2Fstatus%2F%5BanalysisId%5D%2Froute.ts&appDir=%2FUsers%2Fshrijayan.rajendran%2Fprojects%2Fpersonal%2Fbank_statement%2Fapps%2Fweb%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fshrijayan.rajendran%2Fprojects%2Fpersonal%2Fbank_statement%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/analysis/status/[analysisId]/route.ts":
/*!***********************************************************!*\
  !*** ./src/app/api/analysis/status/[analysisId]/route.ts ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/../../node_modules/next/dist/api/server.js\");\n/* harmony import */ var next_auth_next__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next-auth/next */ \"(rsc)/../../node_modules/next-auth/next/index.js\");\n/* harmony import */ var _lib_services_AnalysisService__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/services/AnalysisService */ \"(rsc)/./src/lib/services/AnalysisService.ts\");\n/* harmony import */ var db_src_repositories_UserRepository__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! db/src/repositories/UserRepository */ \"(rsc)/../../packages/db/src/repositories/UserRepository.ts\");\n/* harmony import */ var _lib_errors_AnalysisError__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/errors/AnalysisError */ \"(rsc)/./src/lib/errors/AnalysisError.ts\");\n\n\n\n\n\n/**\n * GET /api/analysis/status/[analysisId]\n * Get analysis progress and status information\n * Lightweight endpoint optimized for frequent polling\n * Requires authentication and user ownership verification\n */ async function GET(request, { params }) {\n    try {\n        // 1. Verify authentication\n        const session = await (0,next_auth_next__WEBPACK_IMPORTED_MODULE_1__.getServerSession)();\n        if (!session?.user?.email) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Authentication required\"\n            }, {\n                status: 401\n            });\n        }\n        // 2. Look up user to get their ObjectId\n        const user = await db_src_repositories_UserRepository__WEBPACK_IMPORTED_MODULE_3__.userRepository.findByEmail(session.user.email);\n        if (!user) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User account not found\"\n            }, {\n                status: 404\n            });\n        }\n        const userId = user._id;\n        // 3. Validate analysisId parameter\n        if (!params.analysisId || params.analysisId.trim() === \"\") {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Analysis ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        // 4. Get analysis status (lightweight data only)\n        const analysis = await _lib_services_AnalysisService__WEBPACK_IMPORTED_MODULE_2__.analysisService.getAnalysisStatus(params.analysisId, userId);\n        if (!analysis) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Analysis not found or access denied\"\n            }, {\n                status: 404\n            });\n        }\n        // 4. Return lightweight status information (no generated data)\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            id: analysis._id,\n            status: analysis.status,\n            progress: analysis.progress || 0,\n            reportTitle: analysis.reportTitle,\n            sourceDocumentCount: analysis.sourceDocumentCount,\n            createdAt: analysis.createdAt,\n            updatedAt: analysis.updatedAt,\n            completedAt: analysis.completedAt,\n            // Include basic metadata if analysis is completed\n            ...analysis.status === \"completed\" && analysis.generatedData && analysis.generatedData?.metadata && {\n                metadata: {\n                    processingTime: analysis.generatedData.metadata.processingTime,\n                    filesProcessed: analysis.generatedData.metadata.filesProcessed,\n                    analysisTimestamp: analysis.generatedData.metadata.analysisTimestamp\n                }\n            }\n        });\n    } catch (error) {\n        console.error(\"Analysis status API error:\", error);\n        if (error instanceof _lib_errors_AnalysisError__WEBPACK_IMPORTED_MODULE_4__.AnalysisError) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: error.message\n            }, {\n                status: 403\n            });\n        }\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to retrieve analysis status\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9hbmFseXNpcy9zdGF0dXMvW2FuYWx5c2lzSWRdL3JvdXRlLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUF3RDtBQUNOO0FBQ2U7QUFDRztBQUNUO0FBRTNEOzs7OztDQUtDLEdBQ00sZUFBZUssSUFDcEJDLE9BQW9CLEVBQ3BCLEVBQUVDLE1BQU0sRUFBc0M7SUFFOUMsSUFBSTtRQUNGLDJCQUEyQjtRQUMzQixNQUFNQyxVQUFVLE1BQU1QLGdFQUFnQkE7UUFDdEMsSUFBSSxDQUFDTyxTQUFTQyxNQUFNQyxPQUFPO1lBQ3pCLE9BQU9WLHFEQUFZQSxDQUFDVyxJQUFJLENBQ3RCO2dCQUFFQyxPQUFPO1lBQTBCLEdBQ25DO2dCQUFFQyxRQUFRO1lBQUk7UUFFbEI7UUFFQSx3Q0FBd0M7UUFDeEMsTUFBTUosT0FBTyxNQUFNTiw4RUFBY0EsQ0FBQ1csV0FBVyxDQUFDTixRQUFRQyxJQUFJLENBQUNDLEtBQUs7UUFDaEUsSUFBSSxDQUFDRCxNQUFNO1lBQ1QsT0FBT1QscURBQVlBLENBQUNXLElBQUksQ0FDdEI7Z0JBQUVDLE9BQU87WUFBeUIsR0FDbEM7Z0JBQUVDLFFBQVE7WUFBSTtRQUVsQjtRQUVBLE1BQU1FLFNBQVNOLEtBQUtPLEdBQUc7UUFFdkIsbUNBQW1DO1FBQ25DLElBQUksQ0FBQ1QsT0FBT1UsVUFBVSxJQUFJVixPQUFPVSxVQUFVLENBQUNDLElBQUksT0FBTyxJQUFJO1lBQ3pELE9BQU9sQixxREFBWUEsQ0FBQ1csSUFBSSxDQUN0QjtnQkFBRUMsT0FBTztZQUEwQixHQUNuQztnQkFBRUMsUUFBUTtZQUFJO1FBRWxCO1FBRUEsaURBQWlEO1FBQ2pELE1BQU1NLFdBQVcsTUFBTWpCLDBFQUFlQSxDQUFDa0IsaUJBQWlCLENBQUNiLE9BQU9VLFVBQVUsRUFBRUY7UUFFNUUsSUFBSSxDQUFDSSxVQUFVO1lBQ2IsT0FBT25CLHFEQUFZQSxDQUFDVyxJQUFJLENBQ3RCO2dCQUFFQyxPQUFPO1lBQXNDLEdBQy9DO2dCQUFFQyxRQUFRO1lBQUk7UUFFbEI7UUFFQSwrREFBK0Q7UUFDL0QsT0FBT2IscURBQVlBLENBQUNXLElBQUksQ0FBQztZQUN2QlUsSUFBSUYsU0FBU0gsR0FBRztZQUNoQkgsUUFBUU0sU0FBU04sTUFBTTtZQUN2QlMsVUFBVUgsU0FBU0csUUFBUSxJQUFJO1lBQy9CQyxhQUFhSixTQUFTSSxXQUFXO1lBQ2pDQyxxQkFBcUJMLFNBQVNLLG1CQUFtQjtZQUNqREMsV0FBV04sU0FBU00sU0FBUztZQUM3QkMsV0FBV1AsU0FBU08sU0FBUztZQUM3QkMsYUFBYVIsU0FBU1EsV0FBVztZQUNqQyxrREFBa0Q7WUFDbEQsR0FBSVIsU0FBU04sTUFBTSxLQUFLLGVBQWVNLFNBQVNTLGFBQWEsSUFBS1QsU0FBU1MsYUFBYSxFQUFVQyxZQUFZO2dCQUM1R0EsVUFBVTtvQkFDUkMsZ0JBQWdCLFNBQVVGLGFBQWEsQ0FBU0MsUUFBUSxDQUFDQyxjQUFjO29CQUN2RUMsZ0JBQWdCLFNBQVVILGFBQWEsQ0FBU0MsUUFBUSxDQUFDRSxjQUFjO29CQUN2RUMsbUJBQW1CLFNBQVVKLGFBQWEsQ0FBU0MsUUFBUSxDQUFDRyxpQkFBaUI7Z0JBQy9FO1lBQ0YsQ0FBQztRQUNIO0lBRUYsRUFBRSxPQUFPcEIsT0FBTztRQUNkcUIsUUFBUXJCLEtBQUssQ0FBQyw4QkFBOEJBO1FBRTVDLElBQUlBLGlCQUFpQlIsb0VBQWFBLEVBQUU7WUFDbEMsT0FBT0oscURBQVlBLENBQUNXLElBQUksQ0FDdEI7Z0JBQUVDLE9BQU9BLE1BQU1zQixPQUFPO1lBQUMsR0FDdkI7Z0JBQUVyQixRQUFRO1lBQUk7UUFFbEI7UUFFQSxPQUFPYixxREFBWUEsQ0FBQ1csSUFBSSxDQUN0QjtZQUFFQyxPQUFPO1FBQXFDLEdBQzlDO1lBQUVDLFFBQVE7UUFBSTtJQUVsQjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4vc3JjL2FwcC9hcGkvYW5hbHlzaXMvc3RhdHVzL1thbmFseXNpc0lkXS9yb3V0ZS50cz8zYmQ2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRSZXF1ZXN0LCBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XG5pbXBvcnQgeyBnZXRTZXJ2ZXJTZXNzaW9uIH0gZnJvbSAnbmV4dC1hdXRoL25leHQnO1xuaW1wb3J0IHsgYW5hbHlzaXNTZXJ2aWNlIH0gZnJvbSAnQC9saWIvc2VydmljZXMvQW5hbHlzaXNTZXJ2aWNlJztcbmltcG9ydCB7IHVzZXJSZXBvc2l0b3J5IH0gZnJvbSAnZGIvc3JjL3JlcG9zaXRvcmllcy9Vc2VyUmVwb3NpdG9yeSc7XG5pbXBvcnQgeyBBbmFseXNpc0Vycm9yIH0gZnJvbSAnQC9saWIvZXJyb3JzL0FuYWx5c2lzRXJyb3InO1xuXG4vKipcbiAqIEdFVCAvYXBpL2FuYWx5c2lzL3N0YXR1cy9bYW5hbHlzaXNJZF1cbiAqIEdldCBhbmFseXNpcyBwcm9ncmVzcyBhbmQgc3RhdHVzIGluZm9ybWF0aW9uXG4gKiBMaWdodHdlaWdodCBlbmRwb2ludCBvcHRpbWl6ZWQgZm9yIGZyZXF1ZW50IHBvbGxpbmdcbiAqIFJlcXVpcmVzIGF1dGhlbnRpY2F0aW9uIGFuZCB1c2VyIG93bmVyc2hpcCB2ZXJpZmljYXRpb25cbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIEdFVChcbiAgcmVxdWVzdDogTmV4dFJlcXVlc3QsXG4gIHsgcGFyYW1zIH06IHsgcGFyYW1zOiB7IGFuYWx5c2lzSWQ6IHN0cmluZyB9IH1cbik6IFByb21pc2U8TmV4dFJlc3BvbnNlPiB7XG4gIHRyeSB7XG4gICAgLy8gMS4gVmVyaWZ5IGF1dGhlbnRpY2F0aW9uXG4gICAgY29uc3Qgc2Vzc2lvbiA9IGF3YWl0IGdldFNlcnZlclNlc3Npb24oKTtcbiAgICBpZiAoIXNlc3Npb24/LnVzZXI/LmVtYWlsKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICdBdXRoZW50aWNhdGlvbiByZXF1aXJlZCcgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMSB9XG4gICAgICApO1xuICAgIH1cblxuICAgIC8vIDIuIExvb2sgdXAgdXNlciB0byBnZXQgdGhlaXIgT2JqZWN0SWRcbiAgICBjb25zdCB1c2VyID0gYXdhaXQgdXNlclJlcG9zaXRvcnkuZmluZEJ5RW1haWwoc2Vzc2lvbi51c2VyLmVtYWlsKTtcbiAgICBpZiAoIXVzZXIpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogJ1VzZXIgYWNjb3VudCBub3QgZm91bmQnIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDQgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICBjb25zdCB1c2VySWQgPSB1c2VyLl9pZDtcblxuICAgIC8vIDMuIFZhbGlkYXRlIGFuYWx5c2lzSWQgcGFyYW1ldGVyXG4gICAgaWYgKCFwYXJhbXMuYW5hbHlzaXNJZCB8fCBwYXJhbXMuYW5hbHlzaXNJZC50cmltKCkgPT09ICcnKSB7XG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICAgIHsgZXJyb3I6ICdBbmFseXNpcyBJRCBpcyByZXF1aXJlZCcgfSxcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XG4gICAgICApO1xuICAgIH1cblxuICAgIC8vIDQuIEdldCBhbmFseXNpcyBzdGF0dXMgKGxpZ2h0d2VpZ2h0IGRhdGEgb25seSlcbiAgICBjb25zdCBhbmFseXNpcyA9IGF3YWl0IGFuYWx5c2lzU2VydmljZS5nZXRBbmFseXNpc1N0YXR1cyhwYXJhbXMuYW5hbHlzaXNJZCwgdXNlcklkKTtcblxuICAgIGlmICghYW5hbHlzaXMpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcbiAgICAgICAgeyBlcnJvcjogJ0FuYWx5c2lzIG5vdCBmb3VuZCBvciBhY2Nlc3MgZGVuaWVkJyB9LFxuICAgICAgICB7IHN0YXR1czogNDA0IH1cbiAgICAgICk7XG4gICAgfVxuXG4gICAgLy8gNC4gUmV0dXJuIGxpZ2h0d2VpZ2h0IHN0YXR1cyBpbmZvcm1hdGlvbiAobm8gZ2VuZXJhdGVkIGRhdGEpXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcbiAgICAgIGlkOiBhbmFseXNpcy5faWQsXG4gICAgICBzdGF0dXM6IGFuYWx5c2lzLnN0YXR1cyxcbiAgICAgIHByb2dyZXNzOiBhbmFseXNpcy5wcm9ncmVzcyB8fCAwLFxuICAgICAgcmVwb3J0VGl0bGU6IGFuYWx5c2lzLnJlcG9ydFRpdGxlLFxuICAgICAgc291cmNlRG9jdW1lbnRDb3VudDogYW5hbHlzaXMuc291cmNlRG9jdW1lbnRDb3VudCxcbiAgICAgIGNyZWF0ZWRBdDogYW5hbHlzaXMuY3JlYXRlZEF0LFxuICAgICAgdXBkYXRlZEF0OiBhbmFseXNpcy51cGRhdGVkQXQsXG4gICAgICBjb21wbGV0ZWRBdDogYW5hbHlzaXMuY29tcGxldGVkQXQsXG4gICAgICAvLyBJbmNsdWRlIGJhc2ljIG1ldGFkYXRhIGlmIGFuYWx5c2lzIGlzIGNvbXBsZXRlZFxuICAgICAgLi4uKGFuYWx5c2lzLnN0YXR1cyA9PT0gJ2NvbXBsZXRlZCcgJiYgYW5hbHlzaXMuZ2VuZXJhdGVkRGF0YSAmJiAoYW5hbHlzaXMuZ2VuZXJhdGVkRGF0YSBhcyBhbnkpPy5tZXRhZGF0YSAmJiB7XG4gICAgICAgIG1ldGFkYXRhOiB7XG4gICAgICAgICAgcHJvY2Vzc2luZ1RpbWU6IChhbmFseXNpcy5nZW5lcmF0ZWREYXRhIGFzIGFueSkubWV0YWRhdGEucHJvY2Vzc2luZ1RpbWUsXG4gICAgICAgICAgZmlsZXNQcm9jZXNzZWQ6IChhbmFseXNpcy5nZW5lcmF0ZWREYXRhIGFzIGFueSkubWV0YWRhdGEuZmlsZXNQcm9jZXNzZWQsXG4gICAgICAgICAgYW5hbHlzaXNUaW1lc3RhbXA6IChhbmFseXNpcy5nZW5lcmF0ZWREYXRhIGFzIGFueSkubWV0YWRhdGEuYW5hbHlzaXNUaW1lc3RhbXBcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICB9KTtcblxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ0FuYWx5c2lzIHN0YXR1cyBBUEkgZXJyb3I6JywgZXJyb3IpO1xuXG4gICAgaWYgKGVycm9yIGluc3RhbmNlb2YgQW5hbHlzaXNFcnJvcikge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxuICAgICAgICB7IGVycm9yOiBlcnJvci5tZXNzYWdlIH0sXG4gICAgICAgIHsgc3RhdHVzOiA0MDMgfVxuICAgICAgKTtcbiAgICB9XG5cbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXG4gICAgICB7IGVycm9yOiAnRmFpbGVkIHRvIHJldHJpZXZlIGFuYWx5c2lzIHN0YXR1cycgfSxcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxuICAgICk7XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJOZXh0UmVzcG9uc2UiLCJnZXRTZXJ2ZXJTZXNzaW9uIiwiYW5hbHlzaXNTZXJ2aWNlIiwidXNlclJlcG9zaXRvcnkiLCJBbmFseXNpc0Vycm9yIiwiR0VUIiwicmVxdWVzdCIsInBhcmFtcyIsInNlc3Npb24iLCJ1c2VyIiwiZW1haWwiLCJqc29uIiwiZXJyb3IiLCJzdGF0dXMiLCJmaW5kQnlFbWFpbCIsInVzZXJJZCIsIl9pZCIsImFuYWx5c2lzSWQiLCJ0cmltIiwiYW5hbHlzaXMiLCJnZXRBbmFseXNpc1N0YXR1cyIsImlkIiwicHJvZ3Jlc3MiLCJyZXBvcnRUaXRsZSIsInNvdXJjZURvY3VtZW50Q291bnQiLCJjcmVhdGVkQXQiLCJ1cGRhdGVkQXQiLCJjb21wbGV0ZWRBdCIsImdlbmVyYXRlZERhdGEiLCJtZXRhZGF0YSIsInByb2Nlc3NpbmdUaW1lIiwiZmlsZXNQcm9jZXNzZWQiLCJhbmFseXNpc1RpbWVzdGFtcCIsImNvbnNvbGUiLCJtZXNzYWdlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/analysis/status/[analysisId]/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/errors/AnalysisError.ts":
/*!*****************************************!*\
  !*** ./src/lib/errors/AnalysisError.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnalysisError: () => (/* binding */ AnalysisError),\n/* harmony export */   FileExtractionError: () => (/* binding */ FileExtractionError),\n/* harmony export */   GeminiAPIError: () => (/* binding */ GeminiAPIError)\n/* harmony export */ });\n/**\n * Custom error class for analysis-related errors\n * Used to provide more specific error handling for the analysis workflow\n */ class AnalysisError extends Error {\n    constructor(message, originalError){\n        super(message);\n        this.originalError = originalError;\n        this.name = \"AnalysisError\";\n        // Maintain proper stack trace for where our error was thrown (Node.js only)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, AnalysisError);\n        }\n    }\n}\n/**\n * Custom error class for Gemini AI API related errors\n * Used to handle specific API errors with status codes\n */ class GeminiAPIError extends Error {\n    constructor(message, statusCode, originalError){\n        super(message);\n        this.statusCode = statusCode;\n        this.originalError = originalError;\n        this.name = \"GeminiAPIError\";\n        // Maintain proper stack trace for where our error was thrown (Node.js only)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, GeminiAPIError);\n        }\n    }\n}\n/**\n * Custom error class for file extraction related errors\n * Used to handle specific file processing errors\n */ class FileExtractionError extends Error {\n    constructor(message, fileType, originalError){\n        super(message);\n        this.fileType = fileType;\n        this.originalError = originalError;\n        this.name = \"FileExtractionError\";\n        // Maintain proper stack trace for where our error was thrown (Node.js only)\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, FileExtractionError);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL2Vycm9ycy9BbmFseXNpc0Vycm9yLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7Q0FHQyxHQUNNLE1BQU1BLHNCQUFzQkM7SUFDakNDLFlBQVlDLE9BQWUsRUFBRSxhQUEwQixDQUFFO1FBQ3ZELEtBQUssQ0FBQ0E7YUFENEJDLGdCQUFBQTtRQUVsQyxJQUFJLENBQUNDLElBQUksR0FBRztRQUVaLDRFQUE0RTtRQUM1RSxJQUFJSixNQUFNSyxpQkFBaUIsRUFBRTtZQUMzQkwsTUFBTUssaUJBQWlCLENBQUMsSUFBSSxFQUFFTjtRQUNoQztJQUNGO0FBQ0Y7QUFFQTs7O0NBR0MsR0FDTSxNQUFNTyx1QkFBdUJOO0lBQ2xDQyxZQUFZQyxPQUFlLEVBQUUsVUFBMEIsRUFBRSxhQUEwQixDQUFFO1FBQ25GLEtBQUssQ0FBQ0E7YUFENEJLLGFBQUFBO2FBQTRCSixnQkFBQUE7UUFFOUQsSUFBSSxDQUFDQyxJQUFJLEdBQUc7UUFFWiw0RUFBNEU7UUFDNUUsSUFBSUosTUFBTUssaUJBQWlCLEVBQUU7WUFDM0JMLE1BQU1LLGlCQUFpQixDQUFDLElBQUksRUFBRUM7UUFDaEM7SUFDRjtBQUNGO0FBRUE7OztDQUdDLEdBQ00sTUFBTUUsNEJBQTRCUjtJQUN2Q0MsWUFBWUMsT0FBZSxFQUFFLFFBQXdCLEVBQUUsYUFBMEIsQ0FBRTtRQUNqRixLQUFLLENBQUNBO2FBRDRCTyxXQUFBQTthQUEwQk4sZ0JBQUFBO1FBRTVELElBQUksQ0FBQ0MsSUFBSSxHQUFHO1FBRVosNEVBQTRFO1FBQzVFLElBQUlKLE1BQU1LLGlCQUFpQixFQUFFO1lBQzNCTCxNQUFNSyxpQkFBaUIsQ0FBQyxJQUFJLEVBQUVHO1FBQ2hDO0lBQ0Y7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uL3NyYy9saWIvZXJyb3JzL0FuYWx5c2lzRXJyb3IudHM/OGZhZCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEN1c3RvbSBlcnJvciBjbGFzcyBmb3IgYW5hbHlzaXMtcmVsYXRlZCBlcnJvcnNcbiAqIFVzZWQgdG8gcHJvdmlkZSBtb3JlIHNwZWNpZmljIGVycm9yIGhhbmRsaW5nIGZvciB0aGUgYW5hbHlzaXMgd29ya2Zsb3dcbiAqL1xuZXhwb3J0IGNsYXNzIEFuYWx5c2lzRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2U6IHN0cmluZywgcHVibGljIG9yaWdpbmFsRXJyb3I/OiBhbnkpIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLm5hbWUgPSAnQW5hbHlzaXNFcnJvcic7XG4gICAgXG4gICAgLy8gTWFpbnRhaW4gcHJvcGVyIHN0YWNrIHRyYWNlIGZvciB3aGVyZSBvdXIgZXJyb3Igd2FzIHRocm93biAoTm9kZS5qcyBvbmx5KVxuICAgIGlmIChFcnJvci5jYXB0dXJlU3RhY2tUcmFjZSkge1xuICAgICAgRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UodGhpcywgQW5hbHlzaXNFcnJvcik7XG4gICAgfVxuICB9XG59XG5cbi8qKlxuICogQ3VzdG9tIGVycm9yIGNsYXNzIGZvciBHZW1pbmkgQUkgQVBJIHJlbGF0ZWQgZXJyb3JzXG4gKiBVc2VkIHRvIGhhbmRsZSBzcGVjaWZpYyBBUEkgZXJyb3JzIHdpdGggc3RhdHVzIGNvZGVzXG4gKi9cbmV4cG9ydCBjbGFzcyBHZW1pbmlBUElFcnJvciBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IobWVzc2FnZTogc3RyaW5nLCBwdWJsaWMgc3RhdHVzQ29kZT86IG51bWJlciwgcHVibGljIG9yaWdpbmFsRXJyb3I/OiBhbnkpIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLm5hbWUgPSAnR2VtaW5pQVBJRXJyb3InO1xuICAgIFxuICAgIC8vIE1haW50YWluIHByb3BlciBzdGFjayB0cmFjZSBmb3Igd2hlcmUgb3VyIGVycm9yIHdhcyB0aHJvd24gKE5vZGUuanMgb25seSlcbiAgICBpZiAoRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UpIHtcbiAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIEdlbWluaUFQSUVycm9yKTtcbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBDdXN0b20gZXJyb3IgY2xhc3MgZm9yIGZpbGUgZXh0cmFjdGlvbiByZWxhdGVkIGVycm9yc1xuICogVXNlZCB0byBoYW5kbGUgc3BlY2lmaWMgZmlsZSBwcm9jZXNzaW5nIGVycm9yc1xuICovXG5leHBvcnQgY2xhc3MgRmlsZUV4dHJhY3Rpb25FcnJvciBleHRlbmRzIEVycm9yIHtcbiAgY29uc3RydWN0b3IobWVzc2FnZTogc3RyaW5nLCBwdWJsaWMgZmlsZVR5cGU/OiBzdHJpbmcsIHB1YmxpYyBvcmlnaW5hbEVycm9yPzogYW55KSB7XG4gICAgc3VwZXIobWVzc2FnZSk7XG4gICAgdGhpcy5uYW1lID0gJ0ZpbGVFeHRyYWN0aW9uRXJyb3InO1xuICAgIFxuICAgIC8vIE1haW50YWluIHByb3BlciBzdGFjayB0cmFjZSBmb3Igd2hlcmUgb3VyIGVycm9yIHdhcyB0aHJvd24gKE5vZGUuanMgb25seSlcbiAgICBpZiAoRXJyb3IuY2FwdHVyZVN0YWNrVHJhY2UpIHtcbiAgICAgIEVycm9yLmNhcHR1cmVTdGFja1RyYWNlKHRoaXMsIEZpbGVFeHRyYWN0aW9uRXJyb3IpO1xuICAgIH1cbiAgfVxufVxuIl0sIm5hbWVzIjpbIkFuYWx5c2lzRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwibWVzc2FnZSIsIm9yaWdpbmFsRXJyb3IiLCJuYW1lIiwiY2FwdHVyZVN0YWNrVHJhY2UiLCJHZW1pbmlBUElFcnJvciIsInN0YXR1c0NvZGUiLCJGaWxlRXh0cmFjdGlvbkVycm9yIiwiZmlsZVR5cGUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/errors/AnalysisError.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/services/AnalysisService.ts":
/*!*********************************************!*\
  !*** ./src/lib/services/AnalysisService.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnalysisService: () => (/* binding */ AnalysisService),\n/* harmony export */   analysisService: () => (/* binding */ analysisService)\n/* harmony export */ });\n/* harmony import */ var _google_genai__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @google/genai */ \"(rsc)/../../node_modules/@google/genai/dist/node/index.mjs\");\n/* harmony import */ var db_src_repositories_AnalysisReportRepository__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! db/src/repositories/AnalysisReportRepository */ \"(rsc)/../../packages/db/src/repositories/AnalysisReportRepository.ts\");\n/* harmony import */ var _errors_AnalysisError__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../errors/AnalysisError */ \"(rsc)/./src/lib/errors/AnalysisError.ts\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n/**\n * Enhanced analysis service using Gemini's native document processing capabilities\n * This service bypasses text extraction and uses Gemini's document understanding directly\n */ class AnalysisService {\n    constructor(){\n        this.apiKeyConfigured = !!process.env.GEMINI_API_KEY;\n        this.modelName = process.env.GEMINI_MODEL || \"gemini-2.5-flash\";\n        if (!this.apiKeyConfigured) {\n            console.warn(\"GEMINI_API_KEY not configured - AI analysis will be skipped\");\n            this.client = null;\n            return;\n        }\n        this.client = new _google_genai__WEBPACK_IMPORTED_MODULE_0__.GoogleGenAI({\n            apiKey: process.env.GEMINI_API_KEY\n        });\n    }\n    /**\n   * Process analysis for uploaded files using native Gemini document understanding\n   * @param uploadId - Unique identifier for the upload batch\n   * @param fileReferences - Array of local file paths for uploaded files\n   * @param userId - User ID who owns the files\n   * @param options - Optional configuration\n   * @returns Analysis report ID\n   */ async processAnalysis(uploadId, fileReferences, userId, options = {}) {\n        const startTime = Date.now();\n        try {\n            console.log(`Starting Gemini native analysis for upload ${uploadId} with ${fileReferences.length} files`);\n            // Validate inputs\n            if (!fileReferences || fileReferences.length === 0) {\n                throw new _errors_AnalysisError__WEBPACK_IMPORTED_MODULE_2__.AnalysisError(\"No file references provided for analysis\");\n            }\n            if (!userId) {\n                throw new _errors_AnalysisError__WEBPACK_IMPORTED_MODULE_2__.AnalysisError(\"User ID is required for analysis\");\n            }\n            // Create initial analysis report record\n            const reportTitle = options.reportTitle || `Financial Analysis - ${new Date().toLocaleDateString()}`;\n            const analysisReport = await this.createInitialReport({\n                userId,\n                uploadId,\n                reportTitle,\n                sourceDocumentCount: fileReferences.length,\n                status: \"processing\",\n                progress: 0\n            });\n            console.log(`Created analysis report ${analysisReport._id}`);\n            try {\n                // Update progress: Starting file processing\n                await this.updateProgress(analysisReport._id, 20, \"Processing documents with AI...\");\n                // Process files directly with Gemini\n                const analysisResults = await this.analyzeDocumentsWithGemini(fileReferences, userId);\n                console.log(\"Gemini native analysis completed successfully\");\n                // Update progress: Analysis complete, saving results\n                await this.updateProgress(analysisReport._id, 80, \"Saving analysis results...\");\n                // Enhance analysis results with metadata\n                const enhancedResults = {\n                    ...analysisResults,\n                    metadata: {\n                        processingTime: Date.now() - startTime,\n                        filesProcessed: fileReferences.length,\n                        analysisTimestamp: new Date().toISOString(),\n                        modelUsed: this.modelName,\n                        useNativeDocumentUnderstanding: true\n                    }\n                };\n                // Save analysis results to database\n                await this.completeAnalysis(analysisReport._id, enhancedResults);\n                console.log(`Analysis completed successfully for report ${analysisReport._id}`);\n                return analysisReport._id;\n            } catch (error) {\n                // Mark analysis as failed\n                await this.markAnalysisFailed(analysisReport._id, error);\n                throw error;\n            }\n        } catch (error) {\n            console.error(\"Analysis failed:\", error);\n            if (error instanceof _errors_AnalysisError__WEBPACK_IMPORTED_MODULE_2__.AnalysisError) {\n                throw error;\n            }\n            throw new _errors_AnalysisError__WEBPACK_IMPORTED_MODULE_2__.AnalysisError(`Failed to process financial analysis: ${error instanceof Error ? error.message : String(error)}`, error);\n        }\n    }\n    /**\n   * Analyze documents using Gemini's native document understanding\n   * @param fileReferences - Array of file references (local:// paths)\n   * @param userId - User ID for access control\n   * @returns Analysis results from Gemini\n   */ async analyzeDocumentsWithGemini(fileReferences, userId) {\n        if (!this.client) {\n            console.log(\"Gemini client not available, returning placeholder analysis\");\n            return this.generatePlaceholderAnalysis(fileReferences);\n        }\n        try {\n            // Prepare document contents for Gemini\n            const contents = [];\n            // Add the financial analysis prompt\n            contents.push({\n                text: `You are a financial analyst AI. Analyze the following bank statement/financial documents and provide a comprehensive financial analysis.\n\nPlease analyze this financial data and return a JSON response with the following structure:\n{\n  \"totalIncome\": number,\n  \"totalExpenses\": number,\n  \"netCashFlow\": number,\n  \"categories\": {\n    \"income\": [\n      { \"category\": \"string\", \"amount\": number, \"percentage\": number }\n    ],\n    \"expenses\": [\n      { \"category\": \"string\", \"amount\": number, \"percentage\": number }\n    ]\n  },\n  \"monthlyTrends\": [\n    { \"month\": \"string\", \"income\": number, \"expenses\": number }\n  ],\n  \"insights\": [\n    { \"type\": \"string\", \"description\": \"string\", \"severity\": \"low|medium|high\" }\n  ],\n  \"recommendations\": [\n    { \"category\": \"string\", \"suggestion\": \"string\", \"potentialSavings\": number }\n  ],\n  \"summary\": \"string\"\n}\n\nFocus on:\n1. Categorizing transactions (salary, groceries, utilities, entertainment, etc.)\n2. Identifying spending patterns and trends\n3. Calculating totals and percentages\n4. Providing actionable insights and recommendations\n5. Highlighting any unusual or concerning patterns\n\nImportant guidelines:\n- Ensure all amounts are positive numbers\n- Percentages should be calculated accurately and sum to 100 for each category type\n- Provide meaningful insights based on the data patterns\n- Include at least 3-5 actionable recommendations\n- Categorize expenses into common categories like: Housing, Transportation, Food, Entertainment, Healthcare, Utilities, Shopping, etc.\n- For income, categorize into: Salary, Freelance, Investment, Benefits, etc.\n- Only return valid JSON without any markdown formatting or additional text\n- If data is insufficient for certain fields, use reasonable defaults (0 for amounts, empty arrays for categories)`\n            });\n            // Process each file\n            for(let i = 0; i < fileReferences.length; i++){\n                const fileRef = fileReferences[i];\n                console.log(`Processing file ${i + 1}/${fileReferences.length}: ${fileRef}`);\n                try {\n                    if (fileRef.startsWith(\"local://\")) {\n                        // Handle local file\n                        const localPath = fileRef.replace(\"local://\", \"\");\n                        const currentDir = process.cwd();\n                        console.log(`Process CWD: ${currentDir}`);\n                        // More robust path resolution - check if we're in the correct directory\n                        let filePath;\n                        if (currentDir.includes(\"bank_statement\")) {\n                            // We're in the right project directory\n                            filePath = (0,path__WEBPACK_IMPORTED_MODULE_4__.join)(currentDir, \"apps\", \"web\", \"uploads\", localPath);\n                        } else {\n                            // We might be in the wrong directory, construct from current directory but go up to find the right path\n                            const parts = currentDir.split(\"/\");\n                            const projectRoot = parts.slice(0, -1).join(\"/\") + \"/bank_statement\";\n                            filePath = (0,path__WEBPACK_IMPORTED_MODULE_4__.join)(projectRoot, \"apps\", \"web\", \"uploads\", localPath);\n                            console.log(`Adjusted path from ${currentDir} to ${projectRoot}`);\n                        }\n                        console.log(`Attempting to read file at: ${filePath}`);\n                        // Read file as buffer\n                        const fileBuffer = await (0,fs_promises__WEBPACK_IMPORTED_MODULE_3__.readFile)(filePath);\n                        const filename = this.extractFilename(fileRef) || `document-${i + 1}`;\n                        // Determine file type\n                        const extension = localPath.toLowerCase().split(\".\").pop();\n                        if (extension === \"pdf\") {\n                            // Use Gemini's native PDF processing\n                            contents.push({\n                                inlineData: {\n                                    mimeType: \"application/pdf\",\n                                    data: fileBuffer.toString(\"base64\")\n                                }\n                            });\n                        } else if (extension === \"txt\" || extension === \"csv\") {\n                            // For text files, add as text content\n                            const textContent = fileBuffer.toString(\"utf-8\");\n                            contents.push({\n                                text: `Document: ${filename}\\n\\n${textContent}`\n                            });\n                        } else {\n                            console.warn(`Unsupported file type for ${filename}, skipping`);\n                        }\n                    }\n                } catch (error) {\n                    console.error(`Failed to process file ${fileRef}:`, error);\n                // Continue with other files\n                }\n            }\n            // Call Gemini API\n            console.log(\"Sending documents to Gemini for analysis...\");\n            const response = await this.client.models.generateContent({\n                model: this.modelName,\n                contents\n            });\n            if (!response || !response.text) {\n                throw new _errors_AnalysisError__WEBPACK_IMPORTED_MODULE_2__.AnalysisError(\"Empty response from Gemini API\");\n            }\n            // Parse JSON response\n            const cleanedText = this.cleanJsonResponse(response.text);\n            const analysisData = JSON.parse(cleanedText);\n            return this.validateAnalysisStructure(analysisData);\n        } catch (error) {\n            console.error(\"Gemini analysis failed:\", error);\n            if (error instanceof _errors_AnalysisError__WEBPACK_IMPORTED_MODULE_2__.AnalysisError) {\n                throw error;\n            }\n            throw new _errors_AnalysisError__WEBPACK_IMPORTED_MODULE_2__.AnalysisError(`Gemini document analysis failed: ${error instanceof Error ? error.message : String(error)}`, error);\n        }\n    }\n    /**\n   * Clean JSON response from potential markdown formatting\n   * @param text - Raw response text\n   * @returns Cleaned JSON string\n   */ cleanJsonResponse(text) {\n        // Remove markdown code blocks if present\n        let cleaned = text.replace(/```json\\s*/g, \"\").replace(/```\\s*/g, \"\");\n        // Remove any leading/trailing whitespace\n        cleaned = cleaned.trim();\n        // If the response starts with explanation text, try to extract just the JSON\n        if (!cleaned.startsWith(\"{\")) {\n            const jsonMatch = cleaned.match(/\\{[\\s\\S]*\\}/);\n            if (jsonMatch) {\n                cleaned = jsonMatch[0];\n            }\n        }\n        return cleaned;\n    }\n    /**\n   * Validate the structure of the AI analysis response\n   * @param data - Raw analysis data from AI\n   * @returns Validated and normalized analysis data\n   */ validateAnalysisStructure(data) {\n        if (!data || typeof data !== \"object\") {\n            throw new _errors_AnalysisError__WEBPACK_IMPORTED_MODULE_2__.AnalysisError(\"AI response is not a valid object\");\n        }\n        // Check required fields\n        const requiredFields = [\n            \"totalIncome\",\n            \"totalExpenses\",\n            \"categories\",\n            \"insights\",\n            \"recommendations\",\n            \"summary\"\n        ];\n        const missingFields = requiredFields.filter((field)=>!(field in data));\n        if (missingFields.length > 0) {\n            throw new _errors_AnalysisError__WEBPACK_IMPORTED_MODULE_2__.AnalysisError(`Missing required fields in AI response: ${missingFields.join(\", \")}`);\n        }\n        // Validate and normalize numeric fields\n        data.totalIncome = this.validateNumber(data.totalIncome, \"totalIncome\");\n        data.totalExpenses = this.validateNumber(data.totalExpenses, \"totalExpenses\");\n        // Calculate netCashFlow if not provided or incorrect\n        data.netCashFlow = data.totalIncome - data.totalExpenses;\n        // Validate categories structure\n        if (!data.categories || typeof data.categories !== \"object\") {\n            throw new _errors_AnalysisError__WEBPACK_IMPORTED_MODULE_2__.AnalysisError(\"Categories field must be an object\");\n        }\n        if (!Array.isArray(data.categories.income)) {\n            data.categories.income = [];\n        }\n        if (!Array.isArray(data.categories.expenses)) {\n            data.categories.expenses = [];\n        }\n        // Validate arrays\n        data.monthlyTrends = Array.isArray(data.monthlyTrends) ? data.monthlyTrends : [];\n        data.insights = Array.isArray(data.insights) ? data.insights : [];\n        data.recommendations = Array.isArray(data.recommendations) ? data.recommendations : [];\n        // Ensure summary is a string\n        if (typeof data.summary !== \"string\") {\n            data.summary = String(data.summary || \"\");\n        }\n        return data;\n    }\n    /**\n   * Generate placeholder analysis when Gemini is not available\n   * @param fileReferences - Array of file references\n   * @returns Mock analysis data structure\n   */ generatePlaceholderAnalysis(fileReferences) {\n        const estimatedIncome = 5000; // Mock estimation\n        const estimatedExpenses = 3500;\n        return {\n            totalIncome: estimatedIncome,\n            totalExpenses: estimatedExpenses,\n            netCashFlow: estimatedIncome - estimatedExpenses,\n            categories: {\n                income: [\n                    {\n                        category: \"Salary\",\n                        amount: estimatedIncome * 0.9,\n                        percentage: 90\n                    },\n                    {\n                        category: \"Other Income\",\n                        amount: estimatedIncome * 0.1,\n                        percentage: 10\n                    }\n                ],\n                expenses: [\n                    {\n                        category: \"Housing\",\n                        amount: estimatedExpenses * 0.3,\n                        percentage: 30\n                    },\n                    {\n                        category: \"Food\",\n                        amount: estimatedExpenses * 0.2,\n                        percentage: 20\n                    },\n                    {\n                        category: \"Transportation\",\n                        amount: estimatedExpenses * 0.15,\n                        percentage: 15\n                    },\n                    {\n                        category: \"Utilities\",\n                        amount: estimatedExpenses * 0.1,\n                        percentage: 10\n                    },\n                    {\n                        category: \"Entertainment\",\n                        amount: estimatedExpenses * 0.1,\n                        percentage: 10\n                    },\n                    {\n                        category: \"Other\",\n                        amount: estimatedExpenses * 0.15,\n                        percentage: 15\n                    }\n                ]\n            },\n            monthlyTrends: [\n                {\n                    month: \"Current\",\n                    income: estimatedIncome,\n                    expenses: estimatedExpenses\n                }\n            ],\n            insights: [\n                {\n                    type: \"Demo Mode\",\n                    description: \"AI analysis requires Gemini API key configuration\",\n                    severity: \"low\"\n                },\n                {\n                    type: \"File Processing\",\n                    description: \"Files uploaded successfully and ready for analysis\",\n                    severity: \"low\"\n                }\n            ],\n            recommendations: [\n                {\n                    category: \"Setup\",\n                    suggestion: \"Configure Gemini API key for real AI insights\",\n                    potentialSavings: 0\n                },\n                {\n                    category: \"Analysis\",\n                    suggestion: \"Upload bank statements for comprehensive analysis\",\n                    potentialSavings: 0\n                }\n            ],\n            summary: `Demo analysis completed for ${fileReferences.length} document(s). This is placeholder data. Configure GEMINI_API_KEY for real AI-powered insights.`,\n            metadata: {\n                isPlaceholderData: true\n            }\n        };\n    }\n    /**\n   * Validate and normalize a numeric field\n   * @param value - Value to validate\n   * @param fieldName - Name of the field for error reporting\n   * @returns Validated numeric value\n   */ validateNumber(value, fieldName) {\n        if (typeof value === \"string\") {\n            const parsed = parseFloat(value);\n            if (!isNaN(parsed)) {\n                return Math.max(0, parsed);\n            }\n        }\n        if (typeof value === \"number\" && !isNaN(value)) {\n            return Math.max(0, value);\n        }\n        console.warn(`Invalid ${fieldName} value: ${value}, defaulting to 0`);\n        return 0;\n    }\n    /**\n   * Extract filename from file URL\n   * @param fileUrl - File URL\n   * @returns Extracted filename\n   */ extractFilename(fileUrl) {\n        try {\n            const parts = fileUrl.split(\"/\");\n            return parts[parts.length - 1] || null;\n        } catch (error) {\n            console.warn(`Failed to extract filename from URL: ${fileUrl}`);\n            return null;\n        }\n    }\n    /**\n   * Create initial analysis report in the database\n   */ async createInitialReport(reportData) {\n        try {\n            return await db_src_repositories_AnalysisReportRepository__WEBPACK_IMPORTED_MODULE_1__.analysisReportRepository.create(reportData);\n        } catch (error) {\n            throw new _errors_AnalysisError__WEBPACK_IMPORTED_MODULE_2__.AnalysisError(`Failed to create analysis report: ${error instanceof Error ? error.message : String(error)}`, error);\n        }\n    }\n    /**\n   * Update analysis progress\n   */ async updateProgress(reportId, progress, status) {\n        try {\n            await db_src_repositories_AnalysisReportRepository__WEBPACK_IMPORTED_MODULE_1__.analysisReportRepository.updateById(reportId, {\n                progress: Math.max(0, Math.min(100, progress))\n            });\n            if (status) {\n                console.log(`Analysis ${reportId}: ${progress}% - ${status}`);\n            }\n        } catch (error) {\n            console.error(`Failed to update progress for analysis ${reportId}:`, error);\n        }\n    }\n    /**\n   * Complete analysis and save final results\n   */ async completeAnalysis(reportId, analysisResults) {\n        try {\n            await db_src_repositories_AnalysisReportRepository__WEBPACK_IMPORTED_MODULE_1__.analysisReportRepository.updateById(reportId, {\n                generatedData: analysisResults,\n                status: \"completed\",\n                progress: 100,\n                completedAt: new Date()\n            });\n        } catch (error) {\n            throw new _errors_AnalysisError__WEBPACK_IMPORTED_MODULE_2__.AnalysisError(`Failed to save analysis results: ${error instanceof Error ? error.message : String(error)}`, error);\n        }\n    }\n    /**\n   * Mark analysis as failed\n   */ async markAnalysisFailed(reportId, error) {\n        try {\n            const errorMessage = error instanceof Error ? error.message : String(error);\n            const errorData = {\n                error: errorMessage,\n                errorType: error.constructor.name,\n                failedAt: new Date().toISOString()\n            };\n            await db_src_repositories_AnalysisReportRepository__WEBPACK_IMPORTED_MODULE_1__.analysisReportRepository.updateById(reportId, {\n                status: \"failed\",\n                generatedData: errorData,\n                completedAt: new Date()\n            });\n        } catch (updateError) {\n            console.error(`Failed to mark analysis ${reportId} as failed:`, updateError);\n        }\n    }\n    /**\n   * Get analysis status by report ID\n   */ async getAnalysisStatus(reportId, userId) {\n        try {\n            const report = await db_src_repositories_AnalysisReportRepository__WEBPACK_IMPORTED_MODULE_1__.analysisReportRepository.findById(reportId);\n            if (!report) {\n                return null;\n            }\n            // Handle migration period: check both ObjectId and email formats\n            let hasAccess = false;\n            // Convert both values to strings for consistent comparison\n            const reportUserIdStr = report.userId?.toString() || \"\";\n            const providedUserIdStr = userId?.toString() || \"\";\n            if (reportUserIdStr === providedUserIdStr) {\n                // Direct match (both converted to strings)\n                hasAccess = true;\n            } else {\n                // Check if the report's userId is an email and we need to convert the provided ObjectId\n                try {\n                    const { userRepository } = await __webpack_require__.e(/*! import() */ \"_rsc_packages_db_src_repositories_UserRepository_ts-_bf461\").then(__webpack_require__.bind(__webpack_require__, /*! db/src/repositories/UserRepository */ \"(rsc)/../../packages/db/src/repositories/UserRepository.ts\"));\n                    // If the report userId looks like an email, try to find user by email and compare ObjectIds\n                    if (typeof reportUserIdStr === \"string\" && reportUserIdStr.includes(\"@\")) {\n                        // Report has email, check if provided userId is ObjectId of that user\n                        const userByEmail = await userRepository.findByEmail(reportUserIdStr);\n                        if (userByEmail && userByEmail._id === providedUserIdStr) {\n                            hasAccess = true;\n                            console.log(`Migration: Report ${reportId} has email userId, matched with ObjectId`);\n                        }\n                    } else {\n                        // Report has ObjectId, check if provided userId might be from user with that ObjectId\n                        const userByObjectId = await userRepository.findById(providedUserIdStr);\n                        if (userByObjectId && reportUserIdStr === userByObjectId.email) {\n                            hasAccess = true;\n                            console.log(`Migration: Report ${reportId} comparison between ObjectId and email`);\n                        }\n                    }\n                } catch (error) {\n                    console.error(\"Error during migration-compatible access check:\", error);\n                }\n            }\n            console.log(\"Access check result:\", {\n                reportId,\n                reportUserId: report.userId,\n                providedUserId: userId,\n                hasAccess\n            });\n            if (!hasAccess) {\n                throw new _errors_AnalysisError__WEBPACK_IMPORTED_MODULE_2__.AnalysisError(\"Access denied: Analysis belongs to different user\");\n            }\n            return report;\n        } catch (error) {\n            if (error instanceof _errors_AnalysisError__WEBPACK_IMPORTED_MODULE_2__.AnalysisError) {\n                throw error;\n            }\n            throw new _errors_AnalysisError__WEBPACK_IMPORTED_MODULE_2__.AnalysisError(`Failed to get analysis status: ${error instanceof Error ? error.message : String(error)}`, error);\n        }\n    }\n    /**\n   * Get all analysis reports for a user\n   */ async getUserAnalyses(userId, limit = 50) {\n        try {\n            // During migration, we need to query for both ObjectId and email formats\n            let reports = await db_src_repositories_AnalysisReportRepository__WEBPACK_IMPORTED_MODULE_1__.analysisReportRepository.findByUserId(userId, limit);\n            // If no reports found and userId looks like an ObjectId, also try finding by email\n            if (reports.length === 0 && userId.length === 24 && !userId.includes(\"@\")) {\n                try {\n                    const { userRepository } = await __webpack_require__.e(/*! import() */ \"_rsc_packages_db_src_repositories_UserRepository_ts-_bf461\").then(__webpack_require__.bind(__webpack_require__, /*! db/src/repositories/UserRepository */ \"(rsc)/../../packages/db/src/repositories/UserRepository.ts\"));\n                    const user = await userRepository.findById(userId);\n                    if (user && user.email) {\n                        // Try finding reports by email for migration compatibility\n                        const emailReports = await db_src_repositories_AnalysisReportRepository__WEBPACK_IMPORTED_MODULE_1__.analysisReportRepository.findByUserId(user.email, limit);\n                        reports = [\n                            ...reports,\n                            ...emailReports\n                        ];\n                        console.log(`Migration: Found ${emailReports.length} reports by email for user ObjectId ${userId}`);\n                    }\n                } catch (error) {\n                    console.error(\"Error during migration-compatible user analysis lookup:\", error);\n                }\n            }\n            return reports;\n        } catch (error) {\n            throw new _errors_AnalysisError__WEBPACK_IMPORTED_MODULE_2__.AnalysisError(`Failed to get user analyses: ${error instanceof Error ? error.message : String(error)}`, error);\n        }\n    }\n    /**\n   * Delete an analysis report\n   */ async deleteAnalysis(reportId, userId) {\n        try {\n            // Use getAnalysisStatus for access control (handles migration compatibility)\n            const report = await this.getAnalysisStatus(reportId, userId);\n            if (!report) {\n                return false;\n            }\n            return await db_src_repositories_AnalysisReportRepository__WEBPACK_IMPORTED_MODULE_1__.analysisReportRepository.deleteById(reportId);\n        } catch (error) {\n            throw new _errors_AnalysisError__WEBPACK_IMPORTED_MODULE_2__.AnalysisError(`Failed to delete analysis: ${error instanceof Error ? error.message : String(error)}`, error);\n        }\n    }\n    /**\n   * Test the analysis service\n   */ async testService() {\n        const results = {\n            geminiConnection: false,\n            database: false,\n            overall: false\n        };\n        try {\n            if (this.client) {\n                // Test with simple content\n                const response = await this.client.models.generateContent({\n                    model: this.modelName,\n                    contents: [\n                        {\n                            text: 'Respond with exactly: {\"test\": \"success\"}'\n                        }\n                    ]\n                });\n                if (response.text && response.text.includes(\"success\")) {\n                    results.geminiConnection = true;\n                }\n            }\n        } catch (error) {\n            console.error(\"Gemini connection test failed:\", error);\n        }\n        try {\n            await db_src_repositories_AnalysisReportRepository__WEBPACK_IMPORTED_MODULE_1__.analysisReportRepository.countByUserId(\"test-user-id\");\n            results.database = true;\n        } catch (error) {\n            console.error(\"Database test failed:\", error);\n        }\n        results.overall = results.geminiConnection && results.database;\n        return results;\n    }\n}\n// Export singleton instance for use in API routes\nconst analysisService = new AnalysisService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/services/AnalysisService.ts\n");

/***/ }),

/***/ "(rsc)/../../packages/db/src/connection.ts":
/*!*******************************************!*\
  !*** ../../packages/db/src/connection.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nlet cached = global.mongoose;\nif (!cached) {\n    cached = global.mongoose = {\n        conn: null,\n        promise: null\n    };\n}\nasync function dbConnect() {\n    if (cached.conn) {\n        return cached.conn;\n    }\n    if (!cached.promise) {\n        const opts = {\n            bufferCommands: false\n        };\n        const MONGODB_URI = process.env.MONGODB_URI;\n        if (!MONGODB_URI) {\n            throw new Error(\"Please define the MONGODB_URI environment variable inside .env.local\");\n        }\n        cached.promise = mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(MONGODB_URI, opts).then((mongoose)=>{\n            return mongoose;\n        });\n    }\n    try {\n        cached.conn = await cached.promise;\n    } catch (e) {\n        cached.promise = null;\n        throw e;\n    }\n    return cached.conn;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dbConnect);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vcGFja2FnZXMvZGIvc3JjL2Nvbm5lY3Rpb24udHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdDO0FBTWhDLElBQUlDLFNBQVNDLE9BQU9GLFFBQVE7QUFFNUIsSUFBSSxDQUFDQyxRQUFRO0lBQ1hBLFNBQVNDLE9BQU9GLFFBQVEsR0FBRztRQUFFRyxNQUFNO1FBQU1DLFNBQVM7SUFBSztBQUN6RDtBQUVBLGVBQWVDO0lBQ2IsSUFBSUosT0FBT0UsSUFBSSxFQUFFO1FBQ2YsT0FBT0YsT0FBT0UsSUFBSTtJQUNwQjtJQUVBLElBQUksQ0FBQ0YsT0FBT0csT0FBTyxFQUFFO1FBQ25CLE1BQU1FLE9BQU87WUFDWEMsZ0JBQWdCO1FBQ2xCO1FBRUEsTUFBTUMsY0FBY0MsUUFBUUMsR0FBRyxDQUFDRixXQUFXO1FBRTNDLElBQUksQ0FBQ0EsYUFBYTtZQUNoQixNQUFNLElBQUlHLE1BQ1I7UUFFSjtRQUVBVixPQUFPRyxPQUFPLEdBQUdKLHVEQUFnQixDQUFDUSxhQUFhRixNQUFNTyxJQUFJLENBQUMsQ0FBQ2I7WUFDekQsT0FBT0E7UUFDVDtJQUNGO0lBRUEsSUFBSTtRQUNGQyxPQUFPRSxJQUFJLEdBQUcsTUFBTUYsT0FBT0csT0FBTztJQUNwQyxFQUFFLE9BQU9VLEdBQUc7UUFDVmIsT0FBT0csT0FBTyxHQUFHO1FBQ2pCLE1BQU1VO0lBQ1I7SUFFQSxPQUFPYixPQUFPRSxJQUFJO0FBQ3BCO0FBRUEsaUVBQWVFLFNBQVNBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly93ZWIvLi4vLi4vcGFja2FnZXMvZGIvc3JjL2Nvbm5lY3Rpb24udHM/NzRkMyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuXG5kZWNsYXJlIGdsb2JhbCB7XG4gIHZhciBtb25nb29zZTogYW55OyAvLyBUaGlzIG11c3QgYmUgYSBgdmFyYCBhbmQgbm90IGEgYGxldCAvIGNvbnN0YFxufVxuXG5sZXQgY2FjaGVkID0gZ2xvYmFsLm1vbmdvb3NlO1xuXG5pZiAoIWNhY2hlZCkge1xuICBjYWNoZWQgPSBnbG9iYWwubW9uZ29vc2UgPSB7IGNvbm46IG51bGwsIHByb21pc2U6IG51bGwgfTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gZGJDb25uZWN0KCk6IFByb21pc2U8dHlwZW9mIG1vbmdvb3NlPiB7XG4gIGlmIChjYWNoZWQuY29ubikge1xuICAgIHJldHVybiBjYWNoZWQuY29ubjtcbiAgfVxuXG4gIGlmICghY2FjaGVkLnByb21pc2UpIHtcbiAgICBjb25zdCBvcHRzID0ge1xuICAgICAgYnVmZmVyQ29tbWFuZHM6IGZhbHNlLFxuICAgIH07XG5cbiAgICBjb25zdCBNT05HT0RCX1VSSSA9IHByb2Nlc3MuZW52Lk1PTkdPREJfVVJJO1xuXG4gICAgaWYgKCFNT05HT0RCX1VSSSkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAnUGxlYXNlIGRlZmluZSB0aGUgTU9OR09EQl9VUkkgZW52aXJvbm1lbnQgdmFyaWFibGUgaW5zaWRlIC5lbnYubG9jYWwnXG4gICAgICApO1xuICAgIH1cblxuICAgIGNhY2hlZC5wcm9taXNlID0gbW9uZ29vc2UuY29ubmVjdChNT05HT0RCX1VSSSwgb3B0cykudGhlbigobW9uZ29vc2UpID0+IHtcbiAgICAgIHJldHVybiBtb25nb29zZTtcbiAgICB9KTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgY2FjaGVkLmNvbm4gPSBhd2FpdCBjYWNoZWQucHJvbWlzZTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIGNhY2hlZC5wcm9taXNlID0gbnVsbDtcbiAgICB0aHJvdyBlO1xuICB9XG5cbiAgcmV0dXJuIGNhY2hlZC5jb25uO1xufVxuXG5leHBvcnQgZGVmYXVsdCBkYkNvbm5lY3Q7XG4iXSwibmFtZXMiOlsibW9uZ29vc2UiLCJjYWNoZWQiLCJnbG9iYWwiLCJjb25uIiwicHJvbWlzZSIsImRiQ29ubmVjdCIsIm9wdHMiLCJidWZmZXJDb21tYW5kcyIsIk1PTkdPREJfVVJJIiwicHJvY2VzcyIsImVudiIsIkVycm9yIiwiY29ubmVjdCIsInRoZW4iLCJlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../packages/db/src/connection.ts\n");

/***/ }),

/***/ "(rsc)/../../packages/db/src/models/AnalysisReport.ts":
/*!******************************************************!*\
  !*** ../../packages/db/src/models/AnalysisReport.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\n// AnalysisReport schema definition\nconst analysisReportSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    userId: {\n        type: (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema).Types.Mixed,\n        required: true,\n        index: true // Indexed for fast lookups of user's reports\n    },\n    uploadId: {\n        type: String,\n        required: false\n    },\n    reportTitle: {\n        type: String,\n        required: true\n    },\n    sourceDocumentCount: {\n        type: Number,\n        required: true\n    },\n    status: {\n        type: String,\n        enum: [\n            \"processing\",\n            \"completed\",\n            \"failed\"\n        ],\n        default: \"processing\",\n        required: true\n    },\n    progress: {\n        type: Number,\n        min: 0,\n        max: 100,\n        default: 0\n    },\n    generatedData: {\n        type: Object,\n        required: false\n    },\n    completedAt: {\n        type: Date,\n        required: false\n    }\n}, {\n    timestamps: true // Automatically adds createdAt and updatedAt fields\n});\n// Add compound index for userId and createdAt for efficient sorting\nanalysisReportSchema.index({\n    userId: 1,\n    createdAt: -1\n});\n// Add index for status to help with filtering\nanalysisReportSchema.index({\n    status: 1\n});\n// Add compound index for userId and status\nanalysisReportSchema.index({\n    userId: 1,\n    status: 1\n});\n// Create and export the AnalysisReport model\nconst AnalysisReport = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models)?.AnalysisReport || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model(\"AnalysisReport\", analysisReportSchema);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (AnalysisReport);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vcGFja2FnZXMvZGIvc3JjL21vZGVscy9BbmFseXNpc1JlcG9ydC50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBZ0M7QUFHaEMsbUNBQW1DO0FBQ25DLE1BQU1DLHVCQUF1QixJQUFJRCx3REFBZSxDQUFDO0lBQy9DRyxRQUFRO1FBQ05DLE1BQU1KLHdEQUFlLENBQUNLLEtBQUssQ0FBQ0MsS0FBSztRQUNqQ0MsVUFBVTtRQUNWQyxPQUFPLEtBQUssNkNBQTZDO0lBQzNEO0lBQ0FDLFVBQVU7UUFDUkwsTUFBTU07UUFDTkgsVUFBVTtJQUNaO0lBQ0FJLGFBQWE7UUFDWFAsTUFBTU07UUFDTkgsVUFBVTtJQUNaO0lBQ0FLLHFCQUFxQjtRQUNuQlIsTUFBTVM7UUFDTk4sVUFBVTtJQUNaO0lBQ0FPLFFBQVE7UUFDTlYsTUFBTU07UUFDTkssTUFBTTtZQUFDO1lBQWM7WUFBYTtTQUFTO1FBQzNDQyxTQUFTO1FBQ1RULFVBQVU7SUFDWjtJQUNBVSxVQUFVO1FBQ1JiLE1BQU1TO1FBQ05LLEtBQUs7UUFDTEMsS0FBSztRQUNMSCxTQUFTO0lBQ1g7SUFDQUksZUFBZTtRQUNiaEIsTUFBTWlCO1FBQ05kLFVBQVU7SUFDWjtJQUNBZSxhQUFhO1FBQ1hsQixNQUFNbUI7UUFDTmhCLFVBQVU7SUFDWjtBQUNGLEdBQUc7SUFDRGlCLFlBQVksS0FBSyxvREFBb0Q7QUFDdkU7QUFFQSxvRUFBb0U7QUFDcEV2QixxQkFBcUJPLEtBQUssQ0FBQztJQUFFTCxRQUFRO0lBQUdzQixXQUFXLENBQUM7QUFBRTtBQUV0RCw4Q0FBOEM7QUFDOUN4QixxQkFBcUJPLEtBQUssQ0FBQztJQUFFTSxRQUFRO0FBQUU7QUFFdkMsMkNBQTJDO0FBQzNDYixxQkFBcUJPLEtBQUssQ0FBQztJQUFFTCxRQUFRO0lBQUdXLFFBQVE7QUFBRTtBQUVsRCw2Q0FBNkM7QUFDN0MsTUFBTVksaUJBQWlCMUIsd0RBQWUsRUFBRTBCLGtCQUN0QzFCLHFEQUFjLENBQWtCLGtCQUFrQkM7QUFFcEQsaUVBQWV5QixjQUFjQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViLy4uLy4uL3BhY2thZ2VzL2RiL3NyYy9tb2RlbHMvQW5hbHlzaXNSZXBvcnQudHM/OWU0NCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuaW1wb3J0IHsgQW5hbHlzaXNSZXBvcnQgYXMgSUFuYWx5c2lzUmVwb3J0IH0gZnJvbSAnbGliL3NyYy90eXBlcyc7XG5cbi8vIEFuYWx5c2lzUmVwb3J0IHNjaGVtYSBkZWZpbml0aW9uXG5jb25zdCBhbmFseXNpc1JlcG9ydFNjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICB1c2VySWQ6IHtcbiAgICB0eXBlOiBtb25nb29zZS5TY2hlbWEuVHlwZXMuTWl4ZWQsIC8vIEFsbG93IGJvdGggT2JqZWN0SWQgKGF1dGhlbnRpY2F0ZWQgdXNlcnMpIGFuZCBTdHJpbmcgKGd1ZXN0IHVzZXJzKVxuICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgIGluZGV4OiB0cnVlIC8vIEluZGV4ZWQgZm9yIGZhc3QgbG9va3VwcyBvZiB1c2VyJ3MgcmVwb3J0c1xuICB9LFxuICB1cGxvYWRJZDoge1xuICAgIHR5cGU6IFN0cmluZyxcbiAgICByZXF1aXJlZDogZmFsc2VcbiAgfSxcbiAgcmVwb3J0VGl0bGU6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgc291cmNlRG9jdW1lbnRDb3VudDoge1xuICAgIHR5cGU6IE51bWJlcixcbiAgICByZXF1aXJlZDogdHJ1ZVxuICB9LFxuICBzdGF0dXM6IHtcbiAgICB0eXBlOiBTdHJpbmcsXG4gICAgZW51bTogWydwcm9jZXNzaW5nJywgJ2NvbXBsZXRlZCcsICdmYWlsZWQnXSxcbiAgICBkZWZhdWx0OiAncHJvY2Vzc2luZycsXG4gICAgcmVxdWlyZWQ6IHRydWVcbiAgfSxcbiAgcHJvZ3Jlc3M6IHtcbiAgICB0eXBlOiBOdW1iZXIsXG4gICAgbWluOiAwLFxuICAgIG1heDogMTAwLFxuICAgIGRlZmF1bHQ6IDBcbiAgfSxcbiAgZ2VuZXJhdGVkRGF0YToge1xuICAgIHR5cGU6IE9iamVjdCwgLy8gRmxleGlibGUgb2JqZWN0IHRvIHN0b3JlIEpTT04gb3V0cHV0IGZyb20gR2VtaW5pXG4gICAgcmVxdWlyZWQ6IGZhbHNlXG4gIH0sXG4gIGNvbXBsZXRlZEF0OiB7XG4gICAgdHlwZTogRGF0ZSxcbiAgICByZXF1aXJlZDogZmFsc2VcbiAgfVxufSwge1xuICB0aW1lc3RhbXBzOiB0cnVlIC8vIEF1dG9tYXRpY2FsbHkgYWRkcyBjcmVhdGVkQXQgYW5kIHVwZGF0ZWRBdCBmaWVsZHNcbn0pO1xuXG4vLyBBZGQgY29tcG91bmQgaW5kZXggZm9yIHVzZXJJZCBhbmQgY3JlYXRlZEF0IGZvciBlZmZpY2llbnQgc29ydGluZ1xuYW5hbHlzaXNSZXBvcnRTY2hlbWEuaW5kZXgoeyB1c2VySWQ6IDEsIGNyZWF0ZWRBdDogLTEgfSk7XG5cbi8vIEFkZCBpbmRleCBmb3Igc3RhdHVzIHRvIGhlbHAgd2l0aCBmaWx0ZXJpbmdcbmFuYWx5c2lzUmVwb3J0U2NoZW1hLmluZGV4KHsgc3RhdHVzOiAxIH0pO1xuXG4vLyBBZGQgY29tcG91bmQgaW5kZXggZm9yIHVzZXJJZCBhbmQgc3RhdHVzXG5hbmFseXNpc1JlcG9ydFNjaGVtYS5pbmRleCh7IHVzZXJJZDogMSwgc3RhdHVzOiAxIH0pO1xuXG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgQW5hbHlzaXNSZXBvcnQgbW9kZWxcbmNvbnN0IEFuYWx5c2lzUmVwb3J0ID0gbW9uZ29vc2UubW9kZWxzPy5BbmFseXNpc1JlcG9ydCB8fCBcbiAgbW9uZ29vc2UubW9kZWw8SUFuYWx5c2lzUmVwb3J0PignQW5hbHlzaXNSZXBvcnQnLCBhbmFseXNpc1JlcG9ydFNjaGVtYSk7XG5cbmV4cG9ydCBkZWZhdWx0IEFuYWx5c2lzUmVwb3J0O1xuIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwiYW5hbHlzaXNSZXBvcnRTY2hlbWEiLCJTY2hlbWEiLCJ1c2VySWQiLCJ0eXBlIiwiVHlwZXMiLCJNaXhlZCIsInJlcXVpcmVkIiwiaW5kZXgiLCJ1cGxvYWRJZCIsIlN0cmluZyIsInJlcG9ydFRpdGxlIiwic291cmNlRG9jdW1lbnRDb3VudCIsIk51bWJlciIsInN0YXR1cyIsImVudW0iLCJkZWZhdWx0IiwicHJvZ3Jlc3MiLCJtaW4iLCJtYXgiLCJnZW5lcmF0ZWREYXRhIiwiT2JqZWN0IiwiY29tcGxldGVkQXQiLCJEYXRlIiwidGltZXN0YW1wcyIsImNyZWF0ZWRBdCIsIkFuYWx5c2lzUmVwb3J0IiwibW9kZWxzIiwibW9kZWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/../../packages/db/src/models/AnalysisReport.ts\n");

/***/ }),

/***/ "(rsc)/../../packages/db/src/models/User.ts":
/*!********************************************!*\
  !*** ../../packages/db/src/models/User.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserSchema: () => (/* binding */ UserSchema),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * User schema definition\n * Following coding standards: camelCase collection name, proper validation, indexing\n */ const UserSchema = new mongoose__WEBPACK_IMPORTED_MODULE_0__.Schema({\n    name: {\n        type: String,\n        required: [\n            true,\n            \"Name is required\"\n        ],\n        trim: true,\n        maxlength: [\n            100,\n            \"Name cannot exceed 100 characters\"\n        ]\n    },\n    email: {\n        type: String,\n        required: [\n            true,\n            \"Email is required\"\n        ],\n        unique: true,\n        lowercase: true,\n        trim: true,\n        match: [\n            /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/,\n            \"Please enter a valid email address\"\n        ]\n    },\n    password: {\n        type: String,\n        required: [\n            true,\n            \"Password is required\"\n        ],\n        minlength: [\n            6,\n            \"Password must be at least 6 characters long\"\n        ]\n    }\n}, {\n    timestamps: true,\n    collection: \"users\"\n});\n// Email index is automatically created by unique: true in schema definition\n/**\n * User model\n * Export both the model and the schema for testing purposes\n */ const User = (mongoose__WEBPACK_IMPORTED_MODULE_0___default().models).User || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model(\"User\", UserSchema);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (User);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi4vLi4vcGFja2FnZXMvZGIvc3JjL21vZGVscy9Vc2VyLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBc0Q7QUFtQnREOzs7Q0FHQyxHQUNELE1BQU1FLGFBQWEsSUFBSUQsNENBQU1BLENBQzNCO0lBQ0VFLE1BQU07UUFDSkMsTUFBTUM7UUFDTkMsVUFBVTtZQUFDO1lBQU07U0FBbUI7UUFDcENDLE1BQU07UUFDTkMsV0FBVztZQUFDO1lBQUs7U0FBb0M7SUFDdkQ7SUFDQUMsT0FBTztRQUNMTCxNQUFNQztRQUNOQyxVQUFVO1lBQUM7WUFBTTtTQUFvQjtRQUNyQ0ksUUFBUTtRQUNSQyxXQUFXO1FBQ1hKLE1BQU07UUFDTkssT0FBTztZQUNMO1lBQ0E7U0FDRDtJQUNIO0lBQ0FDLFVBQVU7UUFDUlQsTUFBTUM7UUFDTkMsVUFBVTtZQUFDO1lBQU07U0FBdUI7UUFDeENRLFdBQVc7WUFBQztZQUFHO1NBQThDO0lBQy9EO0FBQ0YsR0FDQTtJQUNFQyxZQUFZO0lBQ1pDLFlBQVk7QUFDZDtBQUdGLDRFQUE0RTtBQUU1RTs7O0NBR0MsR0FDRCxNQUFNQyxPQUFPakIsd0RBQWUsQ0FBQ2lCLElBQUksSUFBSWpCLHFEQUFjLENBQWUsUUFBUUU7QUFFMUUsaUVBQWVlLElBQUlBLEVBQUM7QUFDRSIsInNvdXJjZXMiOlsid2VicGFjazovL3dlYi8uLi8uLi9wYWNrYWdlcy9kYi9zcmMvbW9kZWxzL1VzZXIudHM/OTcwZSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UsIHsgU2NoZW1hLCBEb2N1bWVudCB9IGZyb20gJ21vbmdvb3NlJztcbmltcG9ydCB7IFVzZXIgYXMgSVVzZXIsIENyZWF0ZVVzZXJEYXRhIH0gZnJvbSAnbGliL3NyYy90eXBlcyc7XG5cbi8qKlxuICogRGF0YWJhc2Utc3BlY2lmaWMgVXNlciBpbnRlcmZhY2UgaW5jbHVkaW5nIHBhc3N3b3JkIGZpZWxkXG4gKiBQYXNzd29yZCBpcyBzdG9yZWQgaW4gZGF0YWJhc2UgYnV0IG5vdCBleHBvc2VkIGluIHNoYXJlZCBmcm9udGVuZCB0eXBlc1xuICovXG5pbnRlcmZhY2UgRGF0YWJhc2VVc2VyIGV4dGVuZHMgT21pdDxJVXNlciwgJ19pZCc+IHtcbiAgcGFzc3dvcmQ6IHN0cmluZztcbn1cblxuLyoqXG4gKiBVc2VyIGRvY3VtZW50IGludGVyZmFjZSBleHRlbmRpbmcgTW9uZ29vc2UgRG9jdW1lbnRcbiAqIFRoaXMgY29tYmluZXMgdGhlIGRhdGFiYXNlIFVzZXIgaW50ZXJmYWNlIHdpdGggTW9uZ29vc2UgRG9jdW1lbnQgbWV0aG9kc1xuICovXG5leHBvcnQgaW50ZXJmYWNlIFVzZXJEb2N1bWVudCBleHRlbmRzIERhdGFiYXNlVXNlciwgRG9jdW1lbnQge1xuICBfaWQ6IG1vbmdvb3NlLlR5cGVzLk9iamVjdElkO1xufVxuXG4vKipcbiAqIFVzZXIgc2NoZW1hIGRlZmluaXRpb25cbiAqIEZvbGxvd2luZyBjb2Rpbmcgc3RhbmRhcmRzOiBjYW1lbENhc2UgY29sbGVjdGlvbiBuYW1lLCBwcm9wZXIgdmFsaWRhdGlvbiwgaW5kZXhpbmdcbiAqL1xuY29uc3QgVXNlclNjaGVtYSA9IG5ldyBTY2hlbWE8VXNlckRvY3VtZW50PihcbiAge1xuICAgIG5hbWU6IHtcbiAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgIHJlcXVpcmVkOiBbdHJ1ZSwgJ05hbWUgaXMgcmVxdWlyZWQnXSxcbiAgICAgIHRyaW06IHRydWUsXG4gICAgICBtYXhsZW5ndGg6IFsxMDAsICdOYW1lIGNhbm5vdCBleGNlZWQgMTAwIGNoYXJhY3RlcnMnXSxcbiAgICB9LFxuICAgIGVtYWlsOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICByZXF1aXJlZDogW3RydWUsICdFbWFpbCBpcyByZXF1aXJlZCddLFxuICAgICAgdW5pcXVlOiB0cnVlLFxuICAgICAgbG93ZXJjYXNlOiB0cnVlLFxuICAgICAgdHJpbTogdHJ1ZSxcbiAgICAgIG1hdGNoOiBbXG4gICAgICAgIC9eXFx3KyhbLi1dP1xcdyspKkBcXHcrKFsuLV0/XFx3KykqKFxcLlxcd3syLDN9KSskLyxcbiAgICAgICAgJ1BsZWFzZSBlbnRlciBhIHZhbGlkIGVtYWlsIGFkZHJlc3MnLFxuICAgICAgXSxcbiAgICB9LFxuICAgIHBhc3N3b3JkOiB7XG4gICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICByZXF1aXJlZDogW3RydWUsICdQYXNzd29yZCBpcyByZXF1aXJlZCddLFxuICAgICAgbWlubGVuZ3RoOiBbNiwgJ1Bhc3N3b3JkIG11c3QgYmUgYXQgbGVhc3QgNiBjaGFyYWN0ZXJzIGxvbmcnXSxcbiAgICB9LFxuICB9LFxuICB7XG4gICAgdGltZXN0YW1wczogdHJ1ZSwgLy8gQXV0b21hdGljYWxseSBhZGRzIGNyZWF0ZWRBdCBhbmQgdXBkYXRlZEF0IGZpZWxkc1xuICAgIGNvbGxlY3Rpb246ICd1c2VycycsIC8vIEZvbGxvd2luZyBjYW1lbENhc2UgbmFtaW5nIGNvbnZlbnRpb24gZm9yIGNvbGxlY3Rpb25zXG4gIH1cbik7XG5cbi8vIEVtYWlsIGluZGV4IGlzIGF1dG9tYXRpY2FsbHkgY3JlYXRlZCBieSB1bmlxdWU6IHRydWUgaW4gc2NoZW1hIGRlZmluaXRpb25cblxuLyoqXG4gKiBVc2VyIG1vZGVsXG4gKiBFeHBvcnQgYm90aCB0aGUgbW9kZWwgYW5kIHRoZSBzY2hlbWEgZm9yIHRlc3RpbmcgcHVycG9zZXNcbiAqL1xuY29uc3QgVXNlciA9IG1vbmdvb3NlLm1vZGVscy5Vc2VyIHx8IG1vbmdvb3NlLm1vZGVsPFVzZXJEb2N1bWVudD4oJ1VzZXInLCBVc2VyU2NoZW1hKTtcblxuZXhwb3J0IGRlZmF1bHQgVXNlcjtcbmV4cG9ydCB7IFVzZXJTY2hlbWEgfTtcbiJdLCJuYW1lcyI6WyJtb25nb29zZSIsIlNjaGVtYSIsIlVzZXJTY2hlbWEiLCJuYW1lIiwidHlwZSIsIlN0cmluZyIsInJlcXVpcmVkIiwidHJpbSIsIm1heGxlbmd0aCIsImVtYWlsIiwidW5pcXVlIiwibG93ZXJjYXNlIiwibWF0Y2giLCJwYXNzd29yZCIsIm1pbmxlbmd0aCIsInRpbWVzdGFtcHMiLCJjb2xsZWN0aW9uIiwiVXNlciIsIm1vZGVscyIsIm1vZGVsIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/../../packages/db/src/models/User.ts\n");

/***/ }),

/***/ "(rsc)/../../packages/db/src/repositories/AnalysisReportRepository.ts":
/*!**********************************************************************!*\
  !*** ../../packages/db/src/repositories/AnalysisReportRepository.ts ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AnalysisReportRepository: () => (/* binding */ AnalysisReportRepository),\n/* harmony export */   analysisReportRepository: () => (/* binding */ analysisReportRepository)\n/* harmony export */ });\n/* harmony import */ var _models_AnalysisReport__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/AnalysisReport */ \"(rsc)/../../packages/db/src/models/AnalysisReport.ts\");\n/* harmony import */ var _connection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../connection */ \"(rsc)/../../packages/db/src/connection.ts\");\n\n\n/**\n * AnalysisReportRepository class implementing the Repository Pattern\n * All database operations for AnalysisReport model should go through this repository\n * Following coding standards: no direct Mongoose calls in API routes\n */ class AnalysisReportRepository {\n    /**\n   * Ensure database connection before operations\n   * Skip connection in test environment (handled by test setup)\n   */ async ensureConnection() {\n        // In test environment, connection is handled by test setup\n        if ( false || process.env.JEST_WORKER_ID) {\n            return;\n        }\n        await (0,_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    }\n    /**\n   * Create a new analysis report\n   * @param reportData - Analysis report creation data\n   * @returns Created analysis report\n   */ async create(reportData) {\n        await this.ensureConnection();\n        const report = new _models_AnalysisReport__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n            userId: reportData.userId,\n            uploadId: reportData.uploadId,\n            reportTitle: reportData.reportTitle,\n            sourceDocumentCount: reportData.sourceDocumentCount,\n            status: reportData.status || \"processing\",\n            progress: reportData.progress || 0,\n            generatedData: reportData.generatedData\n        });\n        const savedReport = await report.save();\n        return this.transformToPublicReport(savedReport);\n    }\n    /**\n   * Find analysis report by ID\n   * @param reportId - Report's MongoDB ObjectId as string\n   * @returns Analysis report or null if not found\n   */ async findById(reportId) {\n        await this.ensureConnection();\n        const report = await _models_AnalysisReport__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findById(reportId).exec();\n        if (!report) return null;\n        return this.transformToPublicReport(report);\n    }\n    /**\n   * Find analysis reports by user ID\n   * @param userId - User's MongoDB ObjectId as string\n   * @param limit - Maximum number of reports to return (default: 50)\n   * @returns Array of analysis reports sorted by creation date (newest first)\n   */ async findByUserId(userId, limit = 50) {\n        await this.ensureConnection();\n        const reports = await _models_AnalysisReport__WEBPACK_IMPORTED_MODULE_0__[\"default\"].find({\n            userId\n        }).sort({\n            createdAt: -1\n        }).limit(limit).exec();\n        return reports.map((report)=>this.transformToPublicReport(report));\n    }\n    /**\n   * Find analysis reports by user ID and status\n   * @param userId - User's MongoDB ObjectId as string\n   * @param status - Analysis status to filter by\n   * @param limit - Maximum number of reports to return (default: 50)\n   * @returns Array of analysis reports with specified status\n   */ async findByUserIdAndStatus(userId, status, limit = 50) {\n        await this.ensureConnection();\n        const reports = await _models_AnalysisReport__WEBPACK_IMPORTED_MODULE_0__[\"default\"].find({\n            userId,\n            status\n        }).sort({\n            createdAt: -1\n        }).limit(limit).exec();\n        return reports.map((report)=>this.transformToPublicReport(report));\n    }\n    /**\n   * Update analysis report by ID\n   * @param reportId - Report's MongoDB ObjectId as string\n   * @param updateData - Partial report data to update\n   * @returns Updated analysis report or null if not found\n   */ async updateById(reportId, updateData) {\n        await this.ensureConnection();\n        const updateFields = {};\n        if (updateData.reportTitle !== undefined) updateFields.reportTitle = updateData.reportTitle;\n        if (updateData.status !== undefined) updateFields.status = updateData.status;\n        if (updateData.progress !== undefined) updateFields.progress = updateData.progress;\n        if (updateData.generatedData !== undefined) updateFields.generatedData = updateData.generatedData;\n        if (updateData.completedAt !== undefined) updateFields.completedAt = updateData.completedAt;\n        const report = await _models_AnalysisReport__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByIdAndUpdate(reportId, {\n            $set: updateFields\n        }, {\n            new: true,\n            runValidators: true\n        }).exec();\n        if (!report) return null;\n        return this.transformToPublicReport(report);\n    }\n    /**\n   * Delete analysis report by ID\n   * @param reportId - Report's MongoDB ObjectId as string\n   * @returns true if deleted, false if not found\n   */ async deleteById(reportId) {\n        await this.ensureConnection();\n        const result = await _models_AnalysisReport__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByIdAndDelete(reportId).exec();\n        return !!result;\n    }\n    /**\n   * Delete all analysis reports for a user\n   * @param userId - User's MongoDB ObjectId as string\n   * @returns Number of reports deleted\n   */ async deleteByUserId(userId) {\n        await this.ensureConnection();\n        const result = await _models_AnalysisReport__WEBPACK_IMPORTED_MODULE_0__[\"default\"].deleteMany({\n            userId\n        }).exec();\n        return result.deletedCount || 0;\n    }\n    /**\n   * Find analysis report by upload ID\n   * @param uploadId - Upload ID associated with the analysis\n   * @returns Analysis report or null if not found\n   */ async findByUploadId(uploadId) {\n        await this.ensureConnection();\n        const report = await _models_AnalysisReport__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findOne({\n            uploadId\n        }).exec();\n        if (!report) return null;\n        return this.transformToPublicReport(report);\n    }\n    /**\n   * Count analysis reports by user ID\n   * @param userId - User's MongoDB ObjectId as string\n   * @returns Number of analysis reports for the user\n   */ async countByUserId(userId) {\n        await this.ensureConnection();\n        return _models_AnalysisReport__WEBPACK_IMPORTED_MODULE_0__[\"default\"].countDocuments({\n            userId\n        }).exec();\n    }\n    /**\n   * Count analysis reports by user ID and status\n   * @param userId - User's MongoDB ObjectId as string\n   * @param status - Analysis status to count\n   * @returns Number of analysis reports with specified status\n   */ async countByUserIdAndStatus(userId, status) {\n        await this.ensureConnection();\n        return _models_AnalysisReport__WEBPACK_IMPORTED_MODULE_0__[\"default\"].countDocuments({\n            userId,\n            status\n        }).exec();\n    }\n    /**\n   * Find analysis reports with pagination and filtering\n   * @param filters - Filter criteria for the query\n   * @param options - Pagination and sorting options\n   * @returns Paginated results with data and pagination info\n   */ async findPaginated(filters, options) {\n        await this.ensureConnection();\n        const { page, limit, sort = {\n            createdAt: -1\n        } } = options;\n        const skip = (page - 1) * limit;\n        const [data, total] = await Promise.all([\n            _models_AnalysisReport__WEBPACK_IMPORTED_MODULE_0__[\"default\"].find(filters).sort(sort).skip(skip).limit(limit).exec(),\n            _models_AnalysisReport__WEBPACK_IMPORTED_MODULE_0__[\"default\"].countDocuments(filters).exec()\n        ]);\n        return {\n            data: data.map((report)=>this.transformToPublicReport(report)),\n            page,\n            limit,\n            total,\n            pages: Math.ceil(total / limit)\n        };\n    }\n    /**\n   * Delete analysis report by ID with user ownership check\n   * @param reportId - Report's MongoDB ObjectId as string\n   * @param userId - User's MongoDB ObjectId as string for ownership verification\n   * @returns true if deleted, false if not found or access denied\n   */ async deleteByIdAndUserId(reportId, userId) {\n        await this.ensureConnection();\n        const result = await _models_AnalysisReport__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findOneAndDelete({\n            _id: reportId,\n            userId\n        }).exec();\n        return !!result;\n    }\n    /**\n   * Transform AnalysisReportDocument to public AnalysisReport interface\n   * @param reportDoc - Mongoose AnalysisReportDocument\n   * @returns Public analysis report data\n   */ transformToPublicReport(reportDoc) {\n        return {\n            _id: reportDoc._id.toString(),\n            userId: reportDoc.userId,\n            uploadId: reportDoc.uploadId,\n            reportTitle: reportDoc.reportTitle,\n            sourceDocumentCount: reportDoc.sourceDocumentCount,\n            status: reportDoc.status,\n            progress: reportDoc.progress,\n            generatedData: reportDoc.generatedData,\n            createdAt: reportDoc.createdAt,\n            updatedAt: reportDoc.updatedAt,\n            completedAt: reportDoc.completedAt\n        };\n    }\n}\n/**\n * Export singleton instance for use in API routes\n * This ensures consistent database connection handling\n */ const analysisReportRepository = new AnalysisReportRepository();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../packages/db/src/repositories/AnalysisReportRepository.ts\n");

/***/ }),

/***/ "(rsc)/../../packages/db/src/repositories/UserRepository.ts":
/*!************************************************************!*\
  !*** ../../packages/db/src/repositories/UserRepository.ts ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UserRepository: () => (/* binding */ UserRepository),\n/* harmony export */   userRepository: () => (/* binding */ userRepository)\n/* harmony export */ });\n/* harmony import */ var _models_User__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../models/User */ \"(rsc)/../../packages/db/src/models/User.ts\");\n/* harmony import */ var _connection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../connection */ \"(rsc)/../../packages/db/src/connection.ts\");\n\n\n/**\n * UserRepository class implementing the Repository Pattern\n * All database operations for User model should go through this repository\n * Following coding standards: no direct Mongoose calls in API routes\n */ class UserRepository {\n    /**\n   * Ensure database connection before operations\n   * Skip connection in test environment (handled by test setup)\n   */ async ensureConnection() {\n        // In test environment, connection is handled by test setup\n        if ( false || process.env.JEST_WORKER_ID) {\n            return;\n        }\n        await (0,_connection__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n    }\n    /**\n   * Find user by email\n   * @param email - User's email address\n   * @returns User document or null if not found\n   */ async findByEmail(email) {\n        await this.ensureConnection();\n        const user = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findOne({\n            email\n        }).exec();\n        if (!user) return null;\n        // Transform to match shared interface (exclude password)\n        return this.transformToPublicUser(user);\n    }\n    /**\n   * Find user by ID\n   * @param userId - User's MongoDB ObjectId as string\n   * @returns User document or null if not found\n   */ async findById(userId) {\n        await this.ensureConnection();\n        const user = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findById(userId).exec();\n        if (!user) return null;\n        return this.transformToPublicUser(user);\n    }\n    /**\n   * Create a new user\n   * @param userData - User creation data with password\n   * @returns Created user (without password)\n   */ async create(userData) {\n        await this.ensureConnection();\n        const user = new _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n            name: userData.name,\n            email: userData.email,\n            password: userData.password\n        });\n        const savedUser = await user.save();\n        return this.transformToPublicUser(savedUser);\n    }\n    /**\n   * Update user by ID\n   * @param userId - User's MongoDB ObjectId as string\n   * @param updateData - Partial user data to update\n   * @returns Updated user or null if not found\n   */ async updateById(userId, updateData) {\n        await this.ensureConnection();\n        const user = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByIdAndUpdate(userId, {\n            $set: updateData\n        }, {\n            new: true,\n            runValidators: true\n        }).exec();\n        if (!user) return null;\n        return this.transformToPublicUser(user);\n    }\n    /**\n   * Delete user by ID\n   * @param userId - User's MongoDB ObjectId as string\n   * @returns true if deleted, false if not found\n   */ async deleteById(userId) {\n        await this.ensureConnection();\n        const result = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByIdAndDelete(userId).exec();\n        return !!result;\n    }\n    /**\n   * Check if user exists by email\n   * @param email - User's email address\n   * @returns true if user exists, false otherwise\n   */ async existsByEmail(email) {\n        await this.ensureConnection();\n        const count = await _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].countDocuments({\n            email\n        }).exec();\n        return count > 0;\n    }\n    /**\n   * Find user by email including password (for authentication)\n   * @param email - User's email address\n   * @returns User document with password or null if not found\n   */ async findByEmailWithPassword(email) {\n        await this.ensureConnection();\n        return _models_User__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findOne({\n            email\n        }).exec();\n    }\n    /**\n   * Transform UserDocument to public User interface (exclude password)\n   * @param userDoc - Mongoose UserDocument\n   * @returns Public user data without sensitive fields\n   */ transformToPublicUser(userDoc) {\n        return {\n            _id: userDoc._id.toString(),\n            name: userDoc.name,\n            email: userDoc.email,\n            createdAt: userDoc.createdAt,\n            updatedAt: userDoc.updatedAt\n        };\n    }\n}\n/**\n * Export singleton instance for use in API routes\n * This ensures consistent database connection handling\n */ const userRepository = new UserRepository();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/../../packages/db/src/repositories/UserRepository.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/next-auth","vendor-chunks/@babel","vendor-chunks/jose","vendor-chunks/openid-client","vendor-chunks/oauth","vendor-chunks/preact","vendor-chunks/uuid","vendor-chunks/preact-render-to-string","vendor-chunks/cookie","vendor-chunks/@panva","vendor-chunks/oidc-token-hash","vendor-chunks/@google","vendor-chunks/gaxios","vendor-chunks/google-auth-library","vendor-chunks/ws","vendor-chunks/bignumber.js","vendor-chunks/json-bigint","vendor-chunks/google-logging-utils","vendor-chunks/debug","vendor-chunks/gtoken","vendor-chunks/jws","vendor-chunks/jwa","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/base64-js","vendor-chunks/extend","vendor-chunks/ms","vendor-chunks/supports-color","vendor-chunks/safe-buffer","vendor-chunks/buffer-equal-constant-time","vendor-chunks/is-stream","vendor-chunks/has-flag"], () => (__webpack_exec__("(rsc)/../../node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalysis%2Fstatus%2F%5BanalysisId%5D%2Froute&page=%2Fapi%2Fanalysis%2Fstatus%2F%5BanalysisId%5D%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalysis%2Fstatus%2F%5BanalysisId%5D%2Froute.ts&appDir=%2FUsers%2Fshrijayan.rajendran%2Fprojects%2Fpersonal%2Fbank_statement%2Fapps%2Fweb%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fshrijayan.rajendran%2Fprojects%2Fpersonal%2Fbank_statement%2Fapps%2Fweb&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();