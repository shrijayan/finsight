"use strict";(()=>{var e={};e.id=595,e.ids=[595,944,919],e.modules={11185:e=>{e.exports=require("mongoose")},72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},39491:e=>{e.exports=require("assert")},14300:e=>{e.exports=require("buffer")},32081:e=>{e.exports=require("child_process")},6113:e=>{e.exports=require("crypto")},82361:e=>{e.exports=require("events")},57147:e=>{e.exports=require("fs")},73292:e=>{e.exports=require("fs/promises")},13685:e=>{e.exports=require("http")},95687:e=>{e.exports=require("https")},41808:e=>{e.exports=require("net")},15673:e=>{e.exports=require("node:events")},97742:e=>{e.exports=require("node:process")},84492:e=>{e.exports=require("node:stream")},47261:e=>{e.exports=require("node:util")},22037:e=>{e.exports=require("os")},71017:e=>{e.exports=require("path")},85477:e=>{e.exports=require("punycode")},63477:e=>{e.exports=require("querystring")},12781:e=>{e.exports=require("stream")},24404:e=>{e.exports=require("tls")},76224:e=>{e.exports=require("tty")},35034:e=>{e.exports=require("url")},73837:e=>{e.exports=require("util")},59796:e=>{e.exports=require("zlib")},89466:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>f,patchFetch:()=>w,requestAsyncStorage:()=>x,routeModule:()=>m,serverHooks:()=>q,staticGenerationAsyncStorage:()=>y});var s={};r.r(s),r.d(s,{GET:()=>p});var a=r(63036),n=r(5736),i=r(15262),o=r(60942),u=r(1295),l=r(48798),d=r(50944),c=r(26281);async function p(e,{params:t}){try{let e=await (0,u.getServerSession)();if(!e?.user?.email)return o.NextResponse.json({error:"Authentication required"},{status:401});let r=await d.userRepository.findByEmail(e.user.email);if(!r)return o.NextResponse.json({error:"User account not found"},{status:404});let s=r._id;if(!t.analysisId||""===t.analysisId.trim())return o.NextResponse.json({error:"Analysis ID is required"},{status:400});let a=await l.analysisService.getAnalysisStatus(t.analysisId,s);if(!a)return o.NextResponse.json({error:"Analysis not found or access denied"},{status:404});return o.NextResponse.json({id:a._id,status:a.status,progress:a.progress||0,reportTitle:a.reportTitle,sourceDocumentCount:a.sourceDocumentCount,createdAt:a.createdAt,updatedAt:a.updatedAt,completedAt:a.completedAt,..."completed"===a.status&&a.generatedData&&a.generatedData?.metadata&&{metadata:{processingTime:a.generatedData.metadata.processingTime,filesProcessed:a.generatedData.metadata.filesProcessed,analysisTimestamp:a.generatedData.metadata.analysisTimestamp}}})}catch(e){if(console.error("Analysis status API error:",e),e instanceof c.Ay)return o.NextResponse.json({error:e.message},{status:403});return o.NextResponse.json({error:"Failed to retrieve analysis status"},{status:500})}}let m=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/analysis/status/[analysisId]/route",pathname:"/api/analysis/status/[analysisId]",filename:"route",bundlePath:"app/api/analysis/status/[analysisId]/route"},resolvedPagePath:"/Users/shrijayan.rajendran/projects/personal/bank_statement/apps/web/src/app/api/analysis/status/[analysisId]/route.ts",nextConfigOutput:"",userland:s}),{requestAsyncStorage:x,staticGenerationAsyncStorage:y,serverHooks:q}=m,f="/api/analysis/status/[analysisId]/route";function w(){return(0,i.patchFetch)({serverHooks:q,staticGenerationAsyncStorage:y})}},77919:(e,t,r)=>{r.d(t,{Z:()=>i});var s=r(11185),a=r.n(s);let n=global.mongoose;n||(n=global.mongoose={conn:null,promise:null});let i=async function(){if(n.conn)return n.conn;if(!n.promise){let e=process.env.MONGODB_URI;if(!e)throw Error("Please define the MONGODB_URI environment variable inside .env.local");n.promise=a().connect(e,{bufferCommands:!1}).then(e=>e)}try{n.conn=await n.promise}catch(e){throw n.promise=null,e}return n.conn}},50944:(e,t,r)=>{r.d(t,{userRepository:()=>l});var s=r(11185),a=r.n(s);let n=new s.Schema({name:{type:String,required:[!0,"Name is required"],trim:!0,maxlength:[100,"Name cannot exceed 100 characters"]},email:{type:String,required:[!0,"Email is required"],unique:!0,lowercase:!0,trim:!0,match:[/^\w+([.-]?\w+)*@\w+([.-]?\w+)*(\.\w{2,3})+$/,"Please enter a valid email address"]},password:{type:String,required:[!0,"Password is required"],minlength:[6,"Password must be at least 6 characters long"]}},{timestamps:!0,collection:"users"}),i=a().models.User||a().model("User",n);var o=r(77919);class u{async ensureConnection(){process.env.JEST_WORKER_ID||await (0,o.Z)()}async findByEmail(e){await this.ensureConnection();let t=await i.findOne({email:e}).exec();return t?this.transformToPublicUser(t):null}async findById(e){await this.ensureConnection();let t=await i.findById(e).exec();return t?this.transformToPublicUser(t):null}async create(e){await this.ensureConnection();let t=new i({name:e.name,email:e.email,password:e.password}),r=await t.save();return this.transformToPublicUser(r)}async updateById(e,t){await this.ensureConnection();let r=await i.findByIdAndUpdate(e,{$set:t},{new:!0,runValidators:!0}).exec();return r?this.transformToPublicUser(r):null}async deleteById(e){return await this.ensureConnection(),!!await i.findByIdAndDelete(e).exec()}async existsByEmail(e){return await this.ensureConnection(),await i.countDocuments({email:e}).exec()>0}async findByEmailWithPassword(e){return await this.ensureConnection(),i.findOne({email:e}).exec()}transformToPublicUser(e){return{_id:e._id.toString(),name:e.name,email:e.email,createdAt:e.createdAt,updatedAt:e.updatedAt}}}let l=new u}};var t=require("../../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[522,295,746,306,879],()=>r(89466));module.exports=s})();